<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>来SC</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://www.sdyunet.cn/"/>
  <updated>2020-03-31T12:10:18.311Z</updated>
  <id>https://www.sdyunet.cn/</id>
  
  <author>
    <name>来SC</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>论他妈的-鲁迅</title>
    <link href="https://www.sdyunet.cn/2020/03/31/%E8%AE%BA%E4%BB%96%E5%A6%88%E7%9A%84/"/>
    <id>https://www.sdyunet.cn/2020/03/31/%E8%AE%BA%E4%BB%96%E5%A6%88%E7%9A%84/</id>
    <published>2020-03-31T12:00:57.000Z</published>
    <updated>2020-03-31T12:10:18.311Z</updated>
    
    <content type="html"><![CDATA[<h1 align="center"> 论他妈的</h1><h3><p align="center">鲁迅</p>&nbsp;&nbsp;&nbsp;&nbsp;无论是谁，只要在中国过活，便总得常听到“他妈的”或其相类的口头禅。我想：这话的分布，大概就跟着中国人足迹之所至罢;使用的遍数，怕也未必比客气的“您好呀”会更少。假使依或人所说，牡丹是中国的“国花”，那么，这就可以算是中国的 “国骂”了。<p>&nbsp;&nbsp;&nbsp;&nbsp;我生长于浙江之东，就是西滢先生之所谓“某籍”。那地方通行的“国骂”却颇简单：专一以“妈”为限，决不牵涉余人。后来稍游各地，才始惊异于国骂之博大而精微：上溯祖宗，旁连姊妹，下递子孙，普及同性，真是“犹河汉而无极也”。而且，不特用于人，也以施之兽。前年，曾见一辆煤车的只轮陷入很深的辙迹里，车夫便愤然跳下，出死力打那拉车的骡子道：“你姊姊的! 你姊姊的!”</p><p>&nbsp;&nbsp;&nbsp;&nbsp;别的国度里怎样，我不知道。单知道诺威人Ham-sun有一本小说叫 《饥饿》，粗野的口吻是很多的，但我并不见这一类话。Gorky所写的小说中多无赖汉，就我所看过的而言，也没有这骂法。惟独Artzybashev在《工人绥惠略夫》里，却使无抵抗主义者亚拉借夫骂了一句“你妈的”。但其时他已经决计为爱而牺牲了，使我们也失却笑他自相矛盾的勇气。这骂的翻译，在中国原极容易的，别国却似乎为难，德文译本作“我使用过你的妈”，日文译本作“你的妈是我的母狗”。这实在太费解，——由我的眼光看起来。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;那么，俄国也有这类骂法的了，但因为究竟没有中国似的精博，所以光荣还得归到这边来。好在这究竟又并非什么大光荣，所以他们大约未必抗议;也不如“赤化”之可怕，中国的阔人，名人，高人，也不至于骇死的。但是，虽在中国，说的也独有所谓“下等人”，例如 “车夫”之类，至于有身分的上等人，例如 “士大夫”之类，则决不出之于口，更何况笔之于书。“予生也晚”，赶不上周朝，未为大夫，也没有做士，本可以放笔直干的，然而终于改头换面，从“国骂”上削去一个动词和一个名词，又改对称为第三人称者，恐怕还因为到底未曾拉车，因而也就不免“有点贵族气味”之故。那用途，既然只限于一部分，似乎又有些不能算作“国骂”了;但也不然，阔人所赏识的牡丹，下等人又何尝以为 “花之富贵者也”?</p><p>&nbsp;&nbsp;&nbsp;&nbsp;这“他妈的”的由来以及始于何代，我也不明白。经史上所见骂人的话，无非是“役夫”，“奴”，“死公”;较厉害的，有“老狗”，“貉子”;更厉害，涉及先代的，也不外乎“而母婢也”，“赘阉遗丑”罢了!还没见过什么“妈的”怎样，虽然也许是士大夫讳而不录。但《广弘明集》(七)记北魏邢子才“以为妇人不可保。谓元景曰，“卿何必姓王?’ 元景变色。子才曰，‘我亦何必姓邢; 能保五世耶?’”则颇有可以推见消息的地方。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;晋朝已经是大重门第，重到过度了;华胄世业，子弟便易于得官，即使是一个酒囊饭袋，也还是不失为清品。北方疆土虽失于拓跋氏，士人却更其发狂似的讲究阀阅，区别等第，守护极严。庶民中纵有俊才，也不能和大姓比并。至于大姓，实不过承祖宗余荫，以旧业骄人，空腹高心，当然使人不耐。但士流既然用祖宗做护符，被压迫的庶民自然也就将他们的祖宗当作仇敌。邢子才的话虽然说不定是否出于愤激，但对于躲在门第下的男女，却确是一个致命的重伤。势位声气，本来仅靠了“祖宗”这惟一的护符而存，“祖宗”倘一被毁，便什么都倒败了。这是倚赖“余荫”的必得的果报。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;同一的意思，但没有邢子才的文才，而直出于“下等人”之口的，就是： “他妈的!”</p><p>&nbsp;&nbsp;&nbsp;&nbsp;要攻击高门大族的坚固的旧堡垒，却去瞄准他的血统，在战略上，真可谓奇谲的了。最先发明这一句“他妈的”的人物，确要算一个天才，——然而是一个卑劣的天才。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;唐以后，自夸族望的风气渐渐消除;到了金元，已奉夷狄为帝王，自不妨拜屠沽作卿士，“等”的上下本该从此有些难定了，但偏还有人想辛辛苦苦地爬进“上等”去。刘时中的曲子里说：“堪笑这没见识街市匹夫，好打那好顽劣。江湖伴侣，旋将表德官名相体呼，声音多厮称，字样不寻俗。听我一个个细数：粜米的唤子良;卖肉的呼仲甫……开张卖饭的呼君宝; 磨面登罗底叫德夫：何足云乎?!”(《乐府新编阳春白雪》三)这就是那时的暴发户的丑态。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;“下等人”还未暴发之先，自然大抵有许多“他妈的”在嘴上，但一遇机会，偶窃一位，略识几字，便即文雅起来：雅号也有了;身分也高了;家谱也修了，还要寻一个始祖，不是名儒便是名臣。从此化为 “上等人”，也如上等前辈一样，言行都很温文尔雅。然而愚民究竟也有聪明的，早已看穿了这鬼把戏，所以又有俗谚，说：“口上仁义礼智，心里男盗女娼!”他们是很明白的。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;于是他们反抗了，曰： “他妈的!”</p><p>&nbsp;&nbsp;&nbsp;&nbsp;但人们不能蔑弃扫荡人我的余泽和旧荫，而硬要去做别人的祖宗，无论如何，总是卑劣的事。有时，也或加暴力于所谓“他妈的”的生命上，但大概是乘机，而不是造运会，所以无论如何，也还是卑劣的事。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;中国人至今还有无数“等”，还是依赖门第，还是倚仗祖宗。倘不改造，即永远有无声的或有声的 “国骂”。就是“他妈的”，围绕在上下和四旁，而且这还须在太平的时候。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;但偶尔也有例外的用法：或表惊异，或表感服。我曾在家乡看见乡农父子一同午饭，儿子指一碗菜向他父亲说： “这不坏，妈的你尝尝看!”那父亲回答道：“我不要吃。妈的你吃去罢!”则简直已经醇化为现在时行的 “我的亲爱的”的意思了。</p><p align="right">一九二五年七月十九日</p></h3><iframe src="//player.bilibili.com/player.html?aid=95349392&bvid=BV18E411K7if&cid=162777304&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true"> </iframe>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 align=&quot;center&quot;&gt; 论他妈的&lt;/h1&gt;
&lt;h3&gt;
&lt;p align=&quot;center&quot;&gt;鲁迅&lt;/p&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;无论是谁，只要在中国过活，便总得常听到“他妈的”或其相类的口头禅。我想：这话的分布，大概就跟着中国人足迹之所至罢
      
    
    </summary>
    
    
      <category term="读书" scheme="https://www.sdyunet.cn/categories/%E8%AF%BB%E4%B9%A6/"/>
    
    
      <category term="鲁迅" scheme="https://www.sdyunet.cn/tags/%E9%B2%81%E8%BF%85/"/>
    
      <category term="小说，他妈的" scheme="https://www.sdyunet.cn/tags/%E5%B0%8F%E8%AF%B4%EF%BC%8C%E4%BB%96%E5%A6%88%E7%9A%84/"/>
    
  </entry>
  
  <entry>
    <title>wordpress渗透测试工具-WPScan</title>
    <link href="https://www.sdyunet.cn/2020/03/31/wordpress%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7-WPScan/"/>
    <id>https://www.sdyunet.cn/2020/03/31/wordpress%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7-WPScan/</id>
    <published>2020-03-31T07:38:33.000Z</published>
    <updated>2020-03-31T07:48:40.834Z</updated>
    
    <content type="html"><![CDATA[<h1 id="WPScan-简介"><a href="#WPScan-简介" class="headerlink" title="WPScan 简介"></a>WPScan 简介</h1><ul><li>WPScan是一个扫描 WordPress漏洞的黑盒扫描器，它可以为Web开发人员扫描WordPress漏洞。它是一款非常棒的Web服务器评估工具，我认为这个工具应该成为所有针对WordPress网站进行的渗透测试的一部分。<blockquote><h2 id="WordPress介绍"><a href="#WordPress介绍" class="headerlink" title="WordPress介绍"></a>WordPress介绍</h2><ul><li>WordPress是全球流行的博客网站，全球有上百万人使用它来搭建博客。他使用PHP脚本和Mysql数据库来搭建网站。</li><li>Wordpress作为三大建站模板之一，在全世界范围内有大量的用户，这也导致白帽子都会去跟踪 WordPress的安全漏洞，Wordpress自诞生起也出现了很多漏洞。Wordpress还可以使用插件、主题。于是Wordpress本身很难挖掘什么安全问题的时候，安全研究者开始研究其插件、主题的漏洞。通过插件，主题的漏洞去渗透Wordpress站点，于是WPScan应运而生，收集 Wordpress的各种漏洞，形成一个Wordpress专用扫描器。  </li></ul></blockquote></li><li>WPScan是Kali Linux默认自带的一款漏洞扫描工具，它采用Ruby编写，能够扫描WordPress网站中的多种安全漏洞，其中包括WordPress本身的漏洞、插件漏洞和主题漏洞。最新版本WPScan的数据库中包含超过18000种插件漏洞和2600种主题漏洞，并且支持最新版本的WordPress。值得注意的是，它不仅能够扫描类似robots.txt这样的敏感文件，而且还能够检测当前已启用的插件和其他功能。</li><li>该扫描器可以实现获取站点用户名，获取安装的所有插件、主题，以及存在漏洞的插件、主题，并提供漏洞信息。同时还可以实现对未加防护的Wordpress站点暴力破解用户名密码。</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;WPScan-简介&quot;&gt;&lt;a href=&quot;#WPScan-简介&quot; class=&quot;headerlink&quot; title=&quot;WPScan 简介&quot;&gt;&lt;/a&gt;WPScan 简介&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;WPScan是一个扫描 WordPress漏洞的黑盒扫描器，它可以为We
      
    
    </summary>
    
    
      <category term="笔记" scheme="https://www.sdyunet.cn/categories/%E7%AC%94%E8%AE%B0/"/>
    
      <category term="渗透测试" scheme="https://www.sdyunet.cn/categories/%E7%AC%94%E8%AE%B0/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/"/>
    
    
      <category term="kali" scheme="https://www.sdyunet.cn/tags/kali/"/>
    
      <category term="渗透测试" scheme="https://www.sdyunet.cn/tags/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/"/>
    
      <category term="wordpress" scheme="https://www.sdyunet.cn/tags/wordpress/"/>
    
      <category term="WPScan" scheme="https://www.sdyunet.cn/tags/WPScan/"/>
    
  </entry>
  
  <entry>
    <title>Python图形化模块EasyGUI中文文档</title>
    <link href="https://www.sdyunet.cn/2020/03/23/python%E5%9B%BE%E5%BD%A2%E5%8C%96%E6%A8%A1%E5%9D%97easygui%E4%B8%AD%E6%96%87%E6%96%87%E6%A1%A3/"/>
    <id>https://www.sdyunet.cn/2020/03/23/python%E5%9B%BE%E5%BD%A2%E5%8C%96%E6%A8%A1%E5%9D%97easygui%E4%B8%AD%E6%96%87%E6%96%87%E6%A1%A3/</id>
    <published>2020-03-23T01:15:02.000Z</published>
    <updated>2020-03-24T02:50:50.349Z</updated>
    
    <content type="html"><![CDATA[<h1 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h1><p>在EasyGUI中，所有的GUI交互都由简单函数调用<br>这是一个使用EasyGUI的简单演示程序。  </p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> easygui <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"></span><br><span class="line"><span class="comment"># A nice welcome message</span></span><br><span class="line">ret_val = msgbox(<span class="string">"Hello, World!"</span>)</span><br><span class="line"><span class="keyword">if</span> ret_val <span class="keyword">is</span> <span class="literal">None</span>: <span class="comment"># User closed msgbox</span></span><br><span class="line">    sys.exit(<span class="number">0</span>)</span><br><span class="line"></span><br><span class="line">msg =<span class="string">"What is your favorite flavor?\nOr Press &lt;cancel&gt; to exit."</span></span><br><span class="line">title = <span class="string">"Ice Cream Survey"</span></span><br><span class="line">choices = [<span class="string">"Vanilla"</span>, <span class="string">"Chocolate"</span>, <span class="string">"Strawberry"</span>, <span class="string">"Rocky Road"</span>]</span><br><span class="line"><span class="keyword">while</span> <span class="number">1</span>:</span><br><span class="line">    choice = choicebox(msg, title, choices)</span><br><span class="line">    <span class="keyword">if</span> choice <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line">        sys.exit(<span class="number">0</span>)</span><br><span class="line">    msgbox(<span class="string">"You chose: &#123;&#125;"</span>.format(choice), <span class="string">"Survey Result"</span>)</span><br></pre></td></tr></table></figure><a id="more"></a><h1 id="EasyGUI演示程序"><a href="#EasyGUI演示程序" class="headerlink" title="EasyGUI演示程序"></a>EasyGUI演示程序</h1><p>要运行EasyGUI的演示程序，从命令行调用EasyGUI：  </p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python easygui.py</span><br></pre></td></tr></table></figure><p>或者从IDE（如 IDLE, PythonWin, Wing等）这样：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> easygui <span class="keyword">import</span> *</span><br><span class="line">egdemo()</span><br></pre></td></tr></table></figure><p>这样就可以使用EasyGUI的各个函数，并将你的选择输出到控制台中。</p><h1 id="导入EasyGUI"><a href="#导入EasyGUI" class="headerlink" title="导入EasyGUI"></a>导入EasyGUI</h1><ul><li>为了使用EasyGUI，必须在使用前导入本模块。最简单的导入语句是：<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> easygui</span><br><span class="line">```  </span><br><span class="line">如果使用该表单，则需要访问EasyGUI的函数，必须使用<span class="string">"EasyGUI"</span>前缀，示例：</span><br><span class="line">```python</span><br><span class="line">easygui.msgbox(...)</span><br><span class="line">```  </span><br><span class="line">* 第二种是以这种方式导入EasyGUI：</span><br><span class="line">```python</span><br><span class="line"><span class="keyword">from</span> easygui <span class="keyword">import</span> *</span><br><span class="line">```  </span><br><span class="line">这使得调用EasyGUI函数更容易；您不必用<span class="string">"EasyGUI"</span>来对函数名进行前缀，此时你就可以这样写：</span><br><span class="line">```python</span><br><span class="line">msgbox(...)</span><br><span class="line">```  </span><br><span class="line">* 第三种是使用如下导入语句：</span><br><span class="line">```python</span><br><span class="line"><span class="keyword">import</span> easygui <span class="keyword">as</span> g</span><br></pre></td></tr></table></figure>这样你就可以使用较少的单词(g)替代原单词(easygui),此时你可以这样写：<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">g.msgbox(...)</span><br></pre></td></tr></table></figure>若你习惯使用Python和EasyGUI，则第三种替代方法实际上是最好的方法。  </li></ul><h1 id="使用EasyGUI"><a href="#使用EasyGUI" class="headerlink" title="使用EasyGUI"></a>使用EasyGUI</h1><p>当您已经导入EasyGUI模块后，GUI操作就可以简单的用EasyGUI函数添加几个参数实现了。例如，使用EasyGUI写一个简单的”Hello,World!”程序：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> easygui <span class="keyword">import</span> *</span><br><span class="line">msgbox(<span class="string">"Hello, world!"</span>)</span><br></pre></td></tr></table></figure><p>若要查看调用EasyGUI运行结果，在命令提示符窗口输入：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python easygui.py</span><br></pre></td></tr></table></figure><p>若要查看调用EasyGUI函数的代码示例，请查看EasyGUI.py末尾的演示代码。</p><h1 id="EasyGUI函数的缺省参数"><a href="#EasyGUI函数的缺省参数" class="headerlink" title="EasyGUI函数的缺省参数"></a>EasyGUI函数的缺省参数</h1><p>对于所有的图形化组件函数，前两个参数是消息(msg)和标题(title)，按顺序排列。在某些情况下，对用户来说这可能不是最为友好的安排（例如，获取目录和文件名的对话框忽略消息(msg)参数），但我认为更重要的是保持所有组件之间的一致性。  </p><p>大多数EasyGUI函数的参数都有缺省值。几乎所有的图形化组件函数都显示一个消息和一个标题。标题默认为空字符串，并且消息通常具有简单的默认值。</p><p>这样可以根据需要，指定尽可能少的参数，以获得所需的结果。例如，msgbox函数的标题参数是可选的，所以你可以只指定消息调用msgbox函数，这样：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">msgbox(<span class="string">"Danger, Will Robinson!"</span>)</span><br><span class="line">```  </span><br><span class="line">或者指定消息和标题，这样：</span><br><span class="line">```python</span><br><span class="line">msgbox(<span class="string">"Danger, Will Robinson!"</span>, <span class="string">"Warning!"</span>)</span><br></pre></td></tr></table></figure><p>在各种类型的buttonbox上，默认的消息是”Shall I continue?”，所以，你可以无需任何参数去调用buttonbox函数。这里，我们可以无需任何参数调用ccbox函数（close/cancel box，它返回布尔值）：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> ccbox():</span><br><span class="line">    <span class="keyword">pass</span><span class="comment"># 用户选择后继续</span></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="keyword">return</span><span class="comment">#用户选择后退出</span></span><br></pre></td></tr></table></figure><h1 id="在调用EasyGUI函数时使用关键字参数"><a href="#在调用EasyGUI函数时使用关键字参数" class="headerlink" title="在调用EasyGUI函数时使用关键字参数"></a>在调用EasyGUI函数时使用关键字参数</h1><p>在调用EasyGUI函数时可能会使用到关键字参数。  </p><p>假设你想使用一个ButoBox，但是（不管什么原因）不想指定标题（第二）位置的参数。您仍然可以使用关键字指定选择参数（第三个参数），这样：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">choices = [<span class="string">"是"</span>,<span class="string">"否"</span>,<span class="string">"只在周五"</span>]</span><br><span class="line">reply = choicebox(<span class="string">"你喜欢吃鱼吗?"</span>, choices=choices)</span><br><span class="line">```  </span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用按钮控件(buttonboxes)</span></span><br><span class="line">为满足公共需求在文件顶部建立buttonbox()的函数。</span><br><span class="line"></span><br><span class="line"><span class="comment">## 提示框</span></span><br><span class="line">msgbox显示一条消息并提供一个OK按钮。你可以发送任何你想要的消息，以及你想要的任何标题。如果你愿意，你也可以在按钮上重写“OK”的默认文本。下面是msgbox函数的示例：</span><br><span class="line">```python</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">msgbox</span><span class="params">(msg=<span class="string">"(Your message goes here)"</span>, title=<span class="string">""</span>, ok_button=<span class="string">"OK"</span>)</span>:</span></span><br><span class="line">    ....</span><br></pre></td></tr></table></figure><p>重写按钮文本最简单的方法是用关键字参数，示例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msgbox(<span class="string">"Backup complete!"</span>, ok_button=<span class="string">"Good job!"</span>)</span><br></pre></td></tr></table></figure><p>下面是几个示例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msgbox(<span class="string">"Hello, world!"</span>)</span><br></pre></td></tr></table></figure><p><img src="https://imgkr.cn-bj.ufileos.com/8f68cfe4-6af5-4a58-b607-edcf747dd050.png" alt="msgbox(&quot;Hello, world!&quot;)"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">msg = <span class="string">"Do you want to continue?"</span></span><br><span class="line">title = <span class="string">"Please Confirm"</span></span><br><span class="line"><span class="keyword">if</span> ccbox(msg, title):     <span class="comment"># show a Continue/Cancel dialog</span></span><br><span class="line">    <span class="keyword">pass</span>  <span class="comment"># user chose Continue</span></span><br><span class="line"><span class="keyword">else</span>:  <span class="comment"># user chose Cancel</span></span><br><span class="line">    sys.exit(<span class="number">0</span>)</span><br></pre></td></tr></table></figure><p><img src="https://imgkr.cn-bj.ufileos.com/2ab4290d-082f-471d-b930-998bc58bb854.png" alt="Do you want to continue?"></p><h2 id="ccbox"><a href="#ccbox" class="headerlink" title="ccbox"></a>ccbox</h2><p>ccbox提供”继续”和”取消”选项，并返回 True（用于继续）或返回 False（用于取消）。</p><h2 id="ynbox"><a href="#ynbox" class="headerlink" title="ynbox"></a>ynbox</h2><p>ynbox提供了”是”和”否”的选择，并返回false的true。</p><h2 id="buttonbox"><a href="#buttonbox" class="headerlink" title="buttonbox"></a>buttonbox</h2><p>若要在buttonbox中指定自己的按钮集，请使用buttonbox()函数。</p><p>buttonbox可以用来显示你选择的一组按钮。当用户单击按钮时，buttonbox()返回选择的文本。如果用户取消或关闭buttonbox，则返回默认选择（第一选择）。</p><p>按钮框显示一个消息、一个标题和一组按钮。返回值为用户选择的按钮的文本。</p><h2 id="indexbox"><a href="#indexbox" class="headerlink" title="indexbox"></a>indexbox</h2><p>indexbox显示一个消息、一个标题和一组按钮。返回用户选择的索引。例如，如果使用三个选项（A，B，C）调用索引框，如果用户选择A，则索引框将返回0，如果他选择B，则返回1，如果选择C，则为2。</p><h2 id="boolbox"><a href="#boolbox" class="headerlink" title="boolbox"></a>boolbox</h2><p>boolbox(boolean box)显示一个消息、一个标题和一组按钮。如果选择第一个按钮，返回1。否则返回0。<br>下面是boolbox()的一个简单例子：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">message = <span class="string">"What does she say?"</span></span><br><span class="line">title = <span class="string">""</span></span><br><span class="line"><span class="keyword">if</span> boolbox(message, title, [<span class="string">"She loves me"</span>, <span class="string">"She loves me not"</span>]):</span><br><span class="line">    sendher(<span class="string">"Flowers"</span>) <span class="comment"># This is just a sample function that you might write.</span></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="keyword">pass</span></span><br></pre></td></tr></table></figure><!--这个例子就很魔性--><h1 id="如何在buttonbox中显示图像"><a href="#如何在buttonbox中显示图像" class="headerlink" title="如何在buttonbox中显示图像"></a>如何在buttonbox中显示图像</h1><p>当调用Button框函数时(或显示按钮的其他函数，如msgbox、indexbox、ynbox等等)，您可以指定关键字参数image=xxx，其中xxx是图像的文件名，文件可以是.gif。</p><p>你也可以使用其他图像格式，如.png。</p><p>如果指定了图像参数，则图像文件将在消息之后显示。</p><p>以下是EasyGUI示例代码：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">image = <span class="string">"python_and_check_logo.gif"</span></span><br><span class="line">msg = <span class="string">"Do you like this picture?"</span></span><br><span class="line">choices = [<span class="string">"Yes"</span>,<span class="string">"No"</span>,<span class="string">"No opinion"</span>]</span><br><span class="line">reply = buttonbox(msg, image=image, choices=choices)</span><br></pre></td></tr></table></figure><p>如果点击底部的一个按钮，它的值将在“reply”中返回。你也可以点击图像，返回图像文件名。</p><p><img src="https://imgkr.cn-bj.ufileos.com/de4e342a-3dfd-452b-9e64-cd5ba220c65a.png" alt="buttonbox中显示图像"></p><h1 id="让用户从选择列表中选择"><a href="#让用户从选择列表中选择" class="headerlink" title="让用户从选择列表中选择"></a>让用户从选择列表中选择</h1><h2 id="choicebox"><a href="#choicebox" class="headerlink" title="choicebox"></a>choicebox</h2><p>Buttonboxes很好地为用户提供了短选择的小选择。但是如果有很多选择，或者选择的文本很长，那么一个更好的策略就是把它们呈现为一个列表。</p><p>choicebox提供了一种用户从选择列表中选择的方法。选择是按序列（元组或列表）指定的。在呈现之前，将给出不区分大小写的选项。</p><p>键盘可以用来选择列表中的元素。</p><p>例如，在键盘上按下”g”，将跳转到”g”开头单词的第一个元素，再次按下”g”，光标会跳转到下一个元素。在从”g”开始的元素的末尾，再次按下”g”将使选择包括所有”g”开头的元素，并跳到”g”开头第一个元素。</p><p>如果没有从”g”开始的元素，则选择发生在”g”位置之前的最后一个元素。如果在”g”之前没有元素，则选择列表中的第一个元素：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">msg =<span class="string">"What is your favorite flavor?"</span></span><br><span class="line">title = <span class="string">"Ice Cream Survey"</span></span><br><span class="line">choices = [<span class="string">"Vanilla"</span>, <span class="string">"Chocolate"</span>, <span class="string">"Strawberry"</span>, <span class="string">"Rocky Road"</span>]</span><br><span class="line">choice = choicebox(msg, title, choices)</span><br></pre></td></tr></table></figure><p><img src="https://imgkr.cn-bj.ufileos.com/382bb6f3-8836-4fbf-86ff-752c5838e85d.png" alt="choicebox"></p><p>choicebox的另一个例子：</p><p><img src="https://imgkr.cn-bj.ufileos.com/fe0f90e8-e8eb-4250-b3ed-283b59fb0481.png" alt="choicebox的另一个例子"></p><h2 id="multchoicebox"><a href="#multchoicebox" class="headerlink" title="multchoicebox"></a>multchoicebox</h2><p>multchoicebox()函数为用户从选择列表中选择了一种方式。界面看起来像choicebox，但是用户可以有0个、1个或多个选择。</p><p>选项是按序列（元组或列表）指定的。在输出之前，选项将按不区分大小写的顺序排列。</p><p><img src="https://imgkr.cn-bj.ufileos.com/e19e9baa-6a04-4e5c-b9ec-6499add8ba61.png" alt="multchoicebox"></p><h1 id="让用户输入信息"><a href="#让用户输入信息" class="headerlink" title="让用户输入信息"></a>让用户输入信息</h1><p>###enterbox</p><p>enterbox是从用户那里获取字符串的最简单的方法</p><h2 id="integerbox"><a href="#integerbox" class="headerlink" title="integerbox"></a>integerbox</h2><p>integerbox是从用户那里获取整数的最简单的方法</p><h2 id="multenterbox"><a href="#multenterbox" class="headerlink" title="multenterbox"></a>multenterbox</h2><p>multenterbox是显示多个enterbox在一个屏幕上的最简单的方法</p><p><img src="https://imgkr.cn-bj.ufileos.com/fad079a0-6227-4daa-aaf9-104ed89a78a7.png" alt="multenterbox"></p><p>在multenterbox中：</p><ul><li>如果值比名称少，则在值的数目与名称的数目相同的情况下，用空字符串填充值列表。</li><li>如果有更多的值而不是名称，则将列表的值截断，以便有与名称一样多的值。</li></ul><p>返回字段值的列表，若用户取消操作，则无返回值。</p><p>下面是一些示例代码，它显示了multenterbox返回的值如何在被接受之前检查其有效性：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> __future__ <span class="keyword">import</span> print_function</span><br><span class="line">msg = <span class="string">"Enter your personal information"</span></span><br><span class="line">title = <span class="string">"Credit Card Application"</span></span><br><span class="line">fieldNames = [<span class="string">"Name"</span>, <span class="string">"Street Address"</span>, <span class="string">"City"</span>, <span class="string">"State"</span>, <span class="string">"ZipCode"</span>]</span><br><span class="line">fieldValues = multenterbox(msg, title, fieldNames)</span><br><span class="line"><span class="keyword">if</span> fieldValues <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line">    sys.exit(<span class="number">0</span>)</span><br><span class="line"><span class="comment"># make sure that none of the fields were left blank</span></span><br><span class="line"><span class="keyword">while</span> <span class="number">1</span>:</span><br><span class="line">    errmsg = <span class="string">""</span></span><br><span class="line">    <span class="keyword">for</span> i, name <span class="keyword">in</span> enumerate(fieldNames):</span><br><span class="line">        <span class="keyword">if</span> fieldValues[i].strip() == <span class="string">""</span>:</span><br><span class="line">          errmsg += <span class="string">"&#123;&#125; is a required field.\n\n"</span>.format(name)</span><br><span class="line">    <span class="keyword">if</span> errmsg == <span class="string">""</span>:</span><br><span class="line">        <span class="keyword">break</span> <span class="comment"># no problems found</span></span><br><span class="line">    fieldValues = multenterbox(errmsg, title, fieldNames, fieldValues)</span><br><span class="line">    <span class="keyword">if</span> fieldValues <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">print(<span class="string">"Reply was:&#123;&#125;"</span>.format(fieldValues))</span><br></pre></td></tr></table></figure><h1 id="让用户输入密码信息"><a href="#让用户输入密码信息" class="headerlink" title="让用户输入密码信息"></a>让用户输入密码信息</h1><h2 id="passwordbox"><a href="#passwordbox" class="headerlink" title="passwordbox"></a>passwordbox</h2><p>passwordbox就像一个enterbox，但用于输入密码。在键入文本时，文本被屏蔽为星号。</p><h2 id="multpasswordbox"><a href="#multpasswordbox" class="headerlink" title="multpasswordbox"></a>multpasswordbox</h2><p>multpasswordbox具有与multenterbox相同的接口，但当显示时，最后一个字段被假定为密码，并用星号屏蔽。</p><p><img src="https://imgkr.cn-bj.ufileos.com/baa8db8e-b313-4730-bb30-e98d69431575.png" alt="multpasswordbox"></p><h1 id="显示文本"><a href="#显示文本" class="headerlink" title="显示文本"></a>显示文本</h1><p>EasyGUI提供了显示文本的功能。</p><h2 id="textbox"><a href="#textbox" class="headerlink" title="textbox"></a>textbox</h2><p>textbox()函数以比例字体显示文本。正文将文字换行。</p><h2 id="codebox"><a href="#codebox" class="headerlink" title="codebox"></a>codebox</h2><p>codebox()函数以一个单字符的字体显示文本，不进行格式处理。</p><p><img src="https://imgkr.cn-bj.ufileos.com/d9f16224-febb-4de9-a537-c921247c69d5.png" alt="codebox"></p><p>注意，可以通过字符串或字符串列表传递codebox()和textbox()。字符串列表将在显示之前转换为文本。你可以使用这些函数显示文件的内容：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line">filename = os.path.normcase(<span class="string">"c:/autoexec.bat"</span>)</span><br><span class="line">f = open(filename, <span class="string">"r"</span>)</span><br><span class="line">text = f.readlines()</span><br><span class="line">f.close()</span><br><span class="line">codebox(<span class="string">"Contents of file "</span> + filename, <span class="string">"Show File Contents"</span>, text)</span><br></pre></td></tr></table></figure><h1 id="使用文件"><a href="#使用文件" class="headerlink" title="使用文件"></a>使用文件</h1><p>常见的需求是向用户请求文件名或目录。EasyGUI提供了允许用户浏览文件系统并选择目录或文件的基本功能(这些函数是关于lib-tk中的小部件和类的包装)。</p><p>请注意，在当前版本的EasyGUI中，不支持startpos参数。</p><h2 id="diropenbox"><a href="#diropenbox" class="headerlink" title="diropenbox"></a>diropenbox</h2><p>diropenbox返回目录的名称</p><h2 id="fileopenbox"><a href="#fileopenbox" class="headerlink" title="fileopenbox"></a>fileopenbox</h2><p>fileopenbox返回打开文件的名称</p><p><img src="https://imgkr.cn-bj.ufileos.com/3fdbf151-527e-41a2-a423-08c3fc64d562.png" alt="fileopenbox"></p><h2 id="filesavebox"><a href="#filesavebox" class="headerlink" title="filesavebox"></a>filesavebox</h2><p>filesavebox返回文件名</p><h1 id="记住用户设置"><a href="#记住用户设置" class="headerlink" title="记住用户设置"></a>记住用户设置</h1><h2 id="EgStore"><a href="#EgStore" class="headerlink" title="EgStore"></a>EgStore</h2><p>用户请求一些设置，然后保存或者将其存储在磁盘上，这样，下次用户使用你的应用程序时，就可以记住他以前的设置。</p><p>为了实现存储和恢复用户设置的过程，EasyGUI提供了一个名为EgStore的类。为了记住一些设置，您的应用程序必须定义一个继承EgStore的类（我们称之为设置，你可以改为”啥都无所谓”)。</p><p>您的应用程序还必须创建该类的对象（让我们调用设置对象）</p><p>设置类的构造函数(the__init__method)可以初始化所有你设置的值。</p><p>完成此操作后，你就可以简单地通过将值赋值给设置对象中的实例变量来记住设置，并使用settings.store()方法将设置参数保存到磁盘。</p><p>下面是使用设置类的代码示例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> easygui <span class="keyword">import</span> EgStore</span><br><span class="line"></span><br><span class="line"><span class="comment"># -----------------------------------------------------------------------</span></span><br><span class="line"><span class="comment"># define a class named Settings as a subclass of EgStore</span></span><br><span class="line"><span class="comment"># -----------------------------------------------------------------------</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Settings</span><span class="params">(EgStore)</span>:</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, filename)</span>:</span>  <span class="comment"># filename is required</span></span><br><span class="line">        <span class="comment"># -------------------------------------------------</span></span><br><span class="line">        <span class="comment"># Specify default/initial values for variables that</span></span><br><span class="line">        <span class="comment"># this particular application wants to remember.</span></span><br><span class="line">        <span class="comment"># -------------------------------------------------</span></span><br><span class="line">        self.userId = <span class="string">""</span></span><br><span class="line">        self.targetServer = <span class="string">""</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># -------------------------------------------------</span></span><br><span class="line">        <span class="comment"># For subclasses of EgStore, these must be</span></span><br><span class="line">        <span class="comment"># the last two statements in  __init__</span></span><br><span class="line">        <span class="comment"># -------------------------------------------------</span></span><br><span class="line">        self.filename = filename  <span class="comment"># this is required</span></span><br><span class="line">        self.restore()</span><br><span class="line"></span><br><span class="line"><span class="comment"># Create the settings object.</span></span><br><span class="line"><span class="comment"># If the settingsFile exists, this will restore its values</span></span><br><span class="line"><span class="comment"># from the settingsFile.</span></span><br><span class="line"><span class="comment"># create "settings", a persistent Settings object</span></span><br><span class="line"><span class="comment"># Note that the "filename" argument is required.</span></span><br><span class="line"><span class="comment"># The directory for the persistent file must already exist.</span></span><br><span class="line"></span><br><span class="line">settingsFilename = <span class="string">"settings.txt"</span></span><br><span class="line">settings = Settings(settingsFilename)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Now use the settings object.</span></span><br><span class="line"><span class="comment"># Initialize the "user" and "server" variables</span></span><br><span class="line"><span class="comment"># In a real application, we'd probably have the user enter them via enterbox</span></span><br><span class="line">user    = <span class="string">"obama_barak"</span></span><br><span class="line">server  = <span class="string">"whitehouse1"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Save the variables as attributes of the "settings" object</span></span><br><span class="line">settings.userId = user</span><br><span class="line">settings.targetServer = server</span><br><span class="line">settings.store()    <span class="comment"># persist the settings</span></span><br><span class="line">print(<span class="string">"\nInitial settings"</span>)</span><br><span class="line"><span class="keyword">print</span> settings</span><br><span class="line"></span><br><span class="line"><span class="comment"># Run code that gets a new value for userId</span></span><br><span class="line"><span class="comment"># then persist the settings with the new value</span></span><br><span class="line">user    = <span class="string">"biden_joe"</span></span><br><span class="line">settings.userId = user</span><br><span class="line">settings.store()</span><br><span class="line">print(<span class="string">"\nSettings after modification"</span>)</span><br><span class="line"><span class="keyword">print</span> settings</span><br><span class="line"></span><br><span class="line"><span class="comment"># Delete setting variable</span></span><br><span class="line"><span class="keyword">del</span> settings.userId</span><br><span class="line">print(<span class="string">"\nSettings after deletion of userId"</span>)</span><br><span class="line"><span class="keyword">print</span> settings</span><br></pre></td></tr></table></figure><p>下面是使用专用函数创建设置类的代码示例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> easygui <span class="keyword">import</span> read_or_create_settings</span><br><span class="line"></span><br><span class="line"><span class="comment"># Create the settings object.</span></span><br><span class="line">settings = read_or_create_settings(<span class="string">'settings1.txt'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Save the variables as attributes of the "settings" object</span></span><br><span class="line">settings.userId = <span class="string">"obama_barak"</span></span><br><span class="line">settings.targetServer = <span class="string">"whitehouse1"</span></span><br><span class="line">settings.store()    <span class="comment"># persist the settings</span></span><br><span class="line">print(<span class="string">"\nInitial settings"</span>)</span><br><span class="line"><span class="keyword">print</span> settings</span><br><span class="line"></span><br><span class="line"><span class="comment"># Run code that gets a new value for userId</span></span><br><span class="line"><span class="comment"># then persist the settings with the new value</span></span><br><span class="line">user    = <span class="string">"biden_joe"</span></span><br><span class="line">settings.userId = user</span><br><span class="line">settings.store()</span><br><span class="line">print(<span class="string">"\nSettings after modification"</span>)</span><br><span class="line"><span class="keyword">print</span> settings</span><br><span class="line"></span><br><span class="line"><span class="comment"># Delete setting variable</span></span><br><span class="line"><span class="keyword">del</span> settings.userId</span><br><span class="line">print(<span class="string">"\nSettings after deletion of userId"</span>)</span><br><span class="line"><span class="keyword">print</span> settings</span><br></pre></td></tr></table></figure><h1 id="捕获异常-抛出异常"><a href="#捕获异常-抛出异常" class="headerlink" title="捕获异常(抛出异常)"></a>捕获异常(抛出异常)</h1><p>##exceptionbox</p><p>在EasyGui应用程序中有时会出现异常情况。根据应用程序的运行方式，堆栈跟踪可能会被丢弃，或者在应用程序崩溃时输出异常信息。</p><p>EasyGUI提供了一种通过exceptionbox处理异常的方法。exceptionbox显示代码框中的堆栈跟踪，并允许继续处理。</p><p>exceptionbox使用简单。下面是一个代码示例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    someFunction()  <span class="comment"># this may raise an exception</span></span><br><span class="line"><span class="keyword">except</span>:</span><br><span class="line">    exceptionbox()</span><br></pre></td></tr></table></figure><p><img src="https://imgkr.cn-bj.ufileos.com/b5fbb376-dfb9-403e-b7fe-51bc0fd2cace.png" alt="exceptionbox"></p><hr/># 翻译自英文版原文档  原版文档地址：[https://easygui.readthedocs.io/en/latest/tutorial.html](https://easygui.readthedocs.io/en/latest/tutorial.html)]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;说明&quot;&gt;&lt;a href=&quot;#说明&quot; class=&quot;headerlink&quot; title=&quot;说明&quot;&gt;&lt;/a&gt;说明&lt;/h1&gt;&lt;p&gt;在EasyGUI中，所有的GUI交互都由简单函数调用&lt;br&gt;这是一个使用EasyGUI的简单演示程序。  &lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; easygui &lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; *&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; sys&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# A nice welcome message&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ret_val = msgbox(&lt;span class=&quot;string&quot;&gt;&quot;Hello, World!&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; ret_val &lt;span class=&quot;keyword&quot;&gt;is&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;None&lt;/span&gt;: &lt;span class=&quot;comment&quot;&gt;# User closed msgbox&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    sys.exit(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;msg =&lt;span class=&quot;string&quot;&gt;&quot;What is your favorite flavor?\nOr Press &amp;lt;cancel&amp;gt; to exit.&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;title = &lt;span class=&quot;string&quot;&gt;&quot;Ice Cream Survey&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;choices = [&lt;span class=&quot;string&quot;&gt;&quot;Vanilla&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;Chocolate&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;Strawberry&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;Rocky Road&quot;&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    choice = choicebox(msg, title, choices)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; choice &lt;span class=&quot;keyword&quot;&gt;is&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;None&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        sys.exit(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    msgbox(&lt;span class=&quot;string&quot;&gt;&quot;You chose: &amp;#123;&amp;#125;&quot;&lt;/span&gt;.format(choice), &lt;span class=&quot;string&quot;&gt;&quot;Survey Result&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="笔记" scheme="https://www.sdyunet.cn/categories/%E7%AC%94%E8%AE%B0/"/>
    
      <category term="开发文档" scheme="https://www.sdyunet.cn/categories/%E7%AC%94%E8%AE%B0/%E5%BC%80%E5%8F%91%E6%96%87%E6%A1%A3/"/>
    
    
      <category term="python" scheme="https://www.sdyunet.cn/tags/python/"/>
    
      <category term="图形化" scheme="https://www.sdyunet.cn/tags/%E5%9B%BE%E5%BD%A2%E5%8C%96/"/>
    
      <category term="easygui" scheme="https://www.sdyunet.cn/tags/easygui/"/>
    
  </entry>
  
  <entry>
    <title>国内访问Github无法显示图片</title>
    <link href="https://www.sdyunet.cn/2020/03/19/%E5%9B%BD%E5%86%85%E8%AE%BF%E9%97%AEGithub%E6%97%A0%E6%B3%95%E6%98%BE%E7%A4%BA%E5%9B%BE%E7%89%87/"/>
    <id>https://www.sdyunet.cn/2020/03/19/%E5%9B%BD%E5%86%85%E8%AE%BF%E9%97%AEGithub%E6%97%A0%E6%B3%95%E6%98%BE%E7%A4%BA%E5%9B%BE%E7%89%87/</id>
    <published>2020-03-18T22:53:05.000Z</published>
    <updated>2020-03-19T01:50:37.535Z</updated>
    
    <content type="html"><![CDATA[<h2 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h2><ul><li>GitHub打开后图片全为损坏图标，无法加载  </li></ul><h2 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h2><ul><li>打开路径C:\Windows\System32\drivers\etc下的hosts文件</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> GitHub Start  </span></span><br><span class="line">192.30.253.112 github.com  </span><br><span class="line">192.30.253.119 gist.github.com  </span><br><span class="line">151.101.184.133 assets-cdn.github.com  </span><br><span class="line">151.101.184.133 raw.githubusercontent.com  </span><br><span class="line">151.101.184.133 gist.githubusercontent.com  </span><br><span class="line">151.101.184.133 cloud.githubusercontent.com  </span><br><span class="line">151.101.184.133 camo.githubusercontent.com  </span><br><span class="line">151.101.184.133 avatars0.githubusercontent.com  </span><br><span class="line">151.101.184.133 avatars1.githubusercontent.com  </span><br><span class="line">151.101.184.133 avatars2.githubusercontent.com  </span><br><span class="line">151.101.184.133 avatars3.githubusercontent.com  </span><br><span class="line">151.101.184.133 avatars4.githubusercontent.com  </span><br><span class="line">151.101.184.133 avatars5.githubusercontent.com  </span><br><span class="line">151.101.184.133 avatars6.githubusercontent.com  </span><br><span class="line">151.101.184.133 avatars7.githubusercontent.com  </span><br><span class="line">151.101.184.133 avatars8.githubusercontent.com  </span><br><span class="line">修改hosts文件后，刷新githab页面</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;问题&quot;&gt;&lt;a href=&quot;#问题&quot; class=&quot;headerlink&quot; title=&quot;问题&quot;&gt;&lt;/a&gt;问题&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;GitHub打开后图片全为损坏图标，无法加载  &lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;解决方法&quot;&gt;&lt;a href=&quot;#解决方法
      
    
    </summary>
    
    
      <category term="笔记" scheme="https://www.sdyunet.cn/categories/%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="Github" scheme="https://www.sdyunet.cn/tags/Github/"/>
    
      <category term="中国防火墙" scheme="https://www.sdyunet.cn/tags/%E4%B8%AD%E5%9B%BD%E9%98%B2%E7%81%AB%E5%A2%99/"/>
    
      <category term="hosts" scheme="https://www.sdyunet.cn/tags/hosts/"/>
    
      <category term="图片" scheme="https://www.sdyunet.cn/tags/%E5%9B%BE%E7%89%87/"/>
    
  </entry>
  
  <entry>
    <title>2019新型冠状病毒(2019-nCoV)相关情况及疫情</title>
    <link href="https://www.sdyunet.cn/2020/01/25/2019%E6%96%B0%E5%9E%8B%E5%86%A0%E7%8A%B6%E7%97%85%E6%AF%92-2019-nCoV-%E7%9B%B8%E5%85%B3%E6%83%85%E5%86%B5%E5%8F%8A%E7%96%AB%E6%83%85/"/>
    <id>https://www.sdyunet.cn/2020/01/25/2019%E6%96%B0%E5%9E%8B%E5%86%A0%E7%8A%B6%E7%97%85%E6%AF%92-2019-nCoV-%E7%9B%B8%E5%85%B3%E6%83%85%E5%86%B5%E5%8F%8A%E7%96%AB%E6%83%85/</id>
    <published>2020-01-25T02:45:35.000Z</published>
    <updated>2020-03-19T01:43:29.854Z</updated>
    
    <content type="html"><![CDATA[<h1 id="2019新型冠状病毒-2019-nCoV-相关情况及疫情实况"><a href="#2019新型冠状病毒-2019-nCoV-相关情况及疫情实况" class="headerlink" title="2019新型冠状病毒(2019-nCoV)相关情况及疫情实况"></a>2019新型冠状病毒(2019-nCoV)相关情况及疫情实况</h1><p><img src="https://i.jpg.dog/img/b5c36954854c9bab29e0bd7b0c78bba1.jpg" alt="标语"></p><a id="more"></a><h1 id="关于2019-nCoV"><a href="#关于2019-nCoV" class="headerlink" title="关于2019-nCoV"></a>关于2019-nCoV</h1><blockquote><ul><li>2019新型冠状病毒，即“2019-nCoV”，因2019年武汉病毒性肺炎病例而被发现，2020年1月12日被世界卫生组织命名。冠状病毒是一个大型病毒家族，已知可引起感冒以及中东呼吸综合征（MERS）和严重急性呼吸综合征（SARS）等较严重疾病。新型冠状病毒是以前从未在人体中发现的冠状病毒新毒株。  </li></ul></blockquote><ul><li>2019年12月以来，湖北省武汉市持续开展流感及相关疾病监测，发现多起病毒性肺炎病例，均诊断为病毒性肺炎/肺部感染。  </li><li>人感染了冠状病毒后常见体征有呼吸道症状、发热、咳嗽、气促和呼吸困难等。在较严重病例中，感染可导致肺炎、严重急性呼吸综合征、肾衰竭，甚至死亡。目前对于新型冠状病毒所致疾病没有特异治疗方法。但许多症状是可以处理的，因此需根据患者临床情况进行治疗。此外，对感染者的辅助护理可能非常有效。  </li><li>做好自我保护包括：保持基本的手部和呼吸道卫生，坚持安全饮食习惯，并尽可能避免与任何表现出有呼吸道疾病症状（如咳嗽和打喷嚏等）的人密切接触。  </li></ul><h1 id="疫情实况"><a href="#疫情实况" class="headerlink" title="疫情实况"></a>疫情实况</h1><iframe height=800 width=100% src="https://3g.dxy.cn/newh5/view/pneumonia" frameboder=0 allowfullscreen></iframe><h1 id="预防措施"><a href="#预防措施" class="headerlink" title="预防措施"></a>预防措施</h1><ul><li>可以预备口罩（请选用医用外科口罩或符合N95/KN95标准及以上的口罩），勤洗手</li><li>保护他人，咳嗽打喷嚏捂住口鼻</li><li>肉类，蛋类煮熟</li><li>保护环境，不用乱丢东西，随地吐痰</li><li>不要去人多凑热闹</li><li>避免与感染患者密切接触</li><li>保护动物，但也不用与野生动物密切接触</li></ul><h1 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h1><h2 id="关于口罩分类："><a href="#关于口罩分类：" class="headerlink" title="关于口罩分类："></a>关于口罩分类：</h2><iframe height=700 width=100%  src="https://player.bilibili.com/player.html?aid=84442591&cid=144434060&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true"> </iframe>  <h2 id="武汉加油"><a href="#武汉加油" class="headerlink" title="武汉加油"></a>武汉加油</h2><p><a href="https://jpg.dog/i/O0tGW" target="_blank" rel="noopener"><img src="https://i.jpg.dog/img/615fafb6fa3d4a90d49dee120fd3a1fa.jpg" alt="武汉加油"></a></p><h1 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h1><ul><li><a href="https://baike.baidu.com/item/2019%E6%96%B0%E5%9E%8B%E5%86%A0%E7%8A%B6%E7%97%85%E6%AF%92/24267858?fromtitle=%E6%96%B0%E5%9E%8B%E5%86%A0%E7%8A%B6%E7%97%85%E6%AF%92" target="_blank" rel="noopener">百度百科词条——2019新型冠状病毒</a></li><li><a href="https://jingyan.baidu.com/article/e75aca858b2330552edac6da.html" target="_blank" rel="noopener">百度经验——新型冠状病毒预防措施</a></li><li><a href="https://www.bilibili.com/video/av84442591" target="_blank" rel="noopener">bilibili——【超详细】防病毒口罩，你想知道的都在这里 | 新型冠状病毒肺炎预防小措施科普</a></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;2019新型冠状病毒-2019-nCoV-相关情况及疫情实况&quot;&gt;&lt;a href=&quot;#2019新型冠状病毒-2019-nCoV-相关情况及疫情实况&quot; class=&quot;headerlink&quot; title=&quot;2019新型冠状病毒(2019-nCoV)相关情况及疫情实况&quot;&gt;&lt;/a&gt;2019新型冠状病毒(2019-nCoV)相关情况及疫情实况&lt;/h1&gt;&lt;p&gt;&lt;img src=&quot;https://i.jpg.dog/img/b5c36954854c9bab29e0bd7b0c78bba1.jpg&quot; alt=&quot;标语&quot;&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="疫情" scheme="https://www.sdyunet.cn/categories/%E7%96%AB%E6%83%85/"/>
    
    
      <category term="2019-nCoV" scheme="https://www.sdyunet.cn/tags/2019-nCoV/"/>
    
      <category term="武汉肺炎" scheme="https://www.sdyunet.cn/tags/%E6%AD%A6%E6%B1%89%E8%82%BA%E7%82%8E/"/>
    
      <category term="疫情" scheme="https://www.sdyunet.cn/tags/%E7%96%AB%E6%83%85/"/>
    
      <category term="实时" scheme="https://www.sdyunet.cn/tags/%E5%AE%9E%E6%97%B6/"/>
    
      <category term="科普" scheme="https://www.sdyunet.cn/tags/%E7%A7%91%E6%99%AE/"/>
    
  </entry>
  
  <entry>
    <title>操作系统期末笔记</title>
    <link href="https://www.sdyunet.cn/2020/01/06/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E6%9C%9F%E6%9C%AB%E7%AC%94%E8%AE%B0/"/>
    <id>https://www.sdyunet.cn/2020/01/06/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E6%9C%9F%E6%9C%AB%E7%AC%94%E8%AE%B0/</id>
    <published>2020-01-06T00:48:25.000Z</published>
    <updated>2020-03-19T01:41:53.390Z</updated>
    
    <content type="html"><![CDATA[<h1 id="第一章"><a href="#第一章" class="headerlink" title="第一章"></a>第一章</h1><h2 id="1-1-1-2节"><a href="#1-1-1-2节" class="headerlink" title="1.1-1.2节"></a>1.1-1.2节</h2><blockquote><h3 id="操作系统的目标"><a href="#操作系统的目标" class="headerlink" title="操作系统的目标"></a>操作系统的目标</h3><ul><li>在计算机系统上配置操作系统，其主要目的是<strong>方便性、有效性、可扩充性、和开放性</strong><h3 id="操作系统的主要作用"><a href="#操作系统的主要作用" class="headerlink" title="操作系统的主要作用"></a>操作系统的主要作用</h3></li><li>是配置在计算机硬件上的第一层软件，是对硬件系统的首次扩充，主要作用是管理好这些设备，提高他们的利用率和系统的吞吐量，并为用户和应用程序提供一个简单的接口，便于用户使用。<h3 id="具体作用如下"><a href="#具体作用如下" class="headerlink" title="具体作用如下"></a>具体作用如下</h3></li></ul><ol><li>OS作为用户与计算机硬件系统之间的接口</li><li>OS作为计算机系统资源管理的管理者</li><li>OS实现了对计算机资源的抽象</li></ol></blockquote><a id="more"></a><blockquote><h3 id="操作系统的发展过程"><a href="#操作系统的发展过程" class="headerlink" title="操作系统的发展过程"></a>操作系统的发展过程</h3><ol><li>未配置操作系统的计算机系统<ul><li>人工操作方式、脱机输入输出方式（off-line I/O方式）</li><li>脱机方式的主要优点：<strong>减少了CPU的空闲时间，装带、卸带、以及将数据从低俗I/O设备送到高速磁带上操作，都是在脱机情况下由外围机完成的，并不占用主机时间，从而有效地减少CPU空闲时间。提高了I/O速度。当CPU在运行中需要输入数据时，是直接从高速的磁带上将数据输入到内存中，极大提高了I/O速度.</strong></li></ul></li><li>单道批处理系统<ul><li>批处理系统旨提高系统资源利用率和系统吞吐量</li><li>主要缺点为:<strong>系统中的资源得不到充分利用</strong></li></ul></li><li>多道批处理系统<ul><li>优缺点:<strong>资源利用率高、系统吞吐量大、平均周转时间长、无交互能力</strong>；</li><li>解决的问题：**处理机争用问题、内存分配和保护问题、I/O设备分配问题、文件的组织和管理问题、文件的组织和管理问题、作业管理问题、用户与系统的接口问题。</li></ul></li><li>分时系统<ul><li>推动分时系统形成和发展的主要动力，则是为了满足用户对人机交互的需求，表现在人机交互，共享主机两个方面。</li></ul></li><li>实时系统<ul><li>类型：<strong>工业（武器）控制系统、信息查询系统、多媒体系统、嵌入式系统</strong></li></ul></li><li>单用户单任务操作系统<ul><li>最具代表性的CP/M和MS-DOS</li></ul></li><li>多用户多任务操作系统<ul><li>UNIX OS 是美国电报电话公司Bell实验室研发的。</li></ul></li></ol></blockquote><h1 id="第二章-进程的描述与控制"><a href="#第二章-进程的描述与控制" class="headerlink" title="第二章 进程的描述与控制"></a>第二章 进程的描述与控制</h1><h2 id="2-2-2-3习题"><a href="#2-2-2-3习题" class="headerlink" title="2.2-2.3习题"></a>2.2-2.3习题</h2><ul><li>静态角度看，进程是由<strong>程序段、数据段、PCB</strong>组成的</li><li><strong>PCB</strong>是进程的唯一标志</li><li>进程和程序的本质区别是：<strong>进程为动态、程序为静态</strong></li><li>进程的三个基本状态：<strong>挂起、阻塞、就绪</strong></li><li>正在等待他人释放临界资源的进程处于<strong>阻塞</strong>状态</li><li>已分配到除CPU外的所有资源的进程处于<strong>就绪</strong>状态</li><li>已获得CPU的进程处于<strong>执行状态</strong></li><li>某进程所要求的一次打印输出结束，进程状态从<strong>阻塞到就绪</strong></li><li>正在执行的进程由于时间片用完被暂停执行，此时，进程应从执行变为<strong>活动阻塞</strong></li><li>若进程正处于执行状态，因终端请求而暂停下来，一边研究其运行情况，这是进程应转变<strong>静止就绪</strong></li><li><strong>完整的程序代码</strong>不属于PCB的内容</li><li>在将CPU的状态分为用户态和核心态的系统中，应该在核心态下执行的指令以此为：<strong>屏蔽所有中断、设置时钟、停机</strong></li><li>在分时系统中，导致进程创建的典型事件是<strong>用户登录</strong></li><li>在批处理系统中，导致进程创建的典型事件为<strong>作业调度</strong></li><li>由系统专门为运行中的应用进程创建新进程的时间是<strong>提供服务</strong></li><li>在创建进程时，<strong>为进程分配CPU</strong>不是创建所必须的步骤<blockquote><ul><li>进程的定义：<br>&nbsp;&nbsp;&nbsp;&nbsp;进程是程序的一次执行，进程是一个程序及其数据在处理机上顺序执行时所发生的活动。  </li><li>创建状态：<br>&nbsp;&nbsp;&nbsp;&nbsp;首先申请一个空白的PCB，并向PCB中填写用于控制和管理进程的信息；然后为该进程分配运行时所必需的资源，最后把该进程转入就绪状态并插入就绪队列中。  </li><li>终止状态：<br>&nbsp;&nbsp;&nbsp;&nbsp;等待操作系统进行善后处理，最后将PCB清零，将PCB空间返还系统。</li></ul></blockquote></li></ul><h2 id="2-4-2-5习题"><a href="#2-4-2-5习题" class="headerlink" title="2.4-2.5习题"></a>2.4-2.5习题</h2><ul><li>在生产者-消费者问题中，应设置<strong>互斥信号量mutex、资源信号量full和empty</strong>。mutex的初始值应设置为<strong>1</strong>,full的初始值应设置为<strong>0</strong>,empty的初始值为 <strong>+n</strong>。</li><li>用信号量S实现对系统中4台打印机的互斥使用，S.value的初始值应当设置为<strong>4</strong>，若S.value当前值为-1，则表示S.L队列中有<strong>1</strong>个等待进程</li><li>设有10个进程共享一个互斥段。如果最多允许有1个进程进入互斥段，则采用的互斥信号量初始值应为<strong>1</strong>；如果最多允许有3个进程进入互斥段，则采用的的互斥信号量初始值应设为<strong>3</strong>。<h2 id="2-7-2-8习题"><a href="#2-7-2-8习题" class="headerlink" title="2.7-2.8习题"></a>2.7-2.8习题</h2></li><li>在引入线程的操作系统中，资源分配和调度基本单位为<strong>进程</strong>，CPU调度和分派的基本单是<strong>线程</strong></li><li>当进程由执行状态变为就绪状态时，CPU现场信息必须保存在PCB中</li><li>信号量的初值不能为负数；线程是CPU调度的基本单位，但不是资源调度的基本单位；管程每次只允许一个进程进入；wait、signal操作可以解决一切互斥问题。</li><li>在三种基本类型的操作系统中，都设置了<strong>进程调度</strong></li><li>在批处理操作系统中，还应设置<strong>作业调度</strong></li><li>在多处理机系统中，还应设置<strong>多处理机调度</strong><h2 id="必会大题"><a href="#必会大题" class="headerlink" title="必会大题"></a>必会大题</h2></li></ul><ol><li>生产者-消费者问题的算法： <figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">Product()&#123;</span><br><span class="line">    <span class="keyword">while</span>(<span class="number">1</span>)&#123;</span><br><span class="line">        wait(empty);</span><br><span class="line">        wait(mutex);</span><br><span class="line">        <span class="built_in">buffer</span>(in)=m;</span><br><span class="line">        in=(in+<span class="number">1</span>)%n;</span><br><span class="line">        signal(mutex);</span><br><span class="line">        signal(full);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">Consumer()&#123;</span><br><span class="line">    <span class="keyword">while</span>(<span class="number">1</span>)&#123;</span><br><span class="line">        wait(full);</span><br><span class="line">        wait(mutex);</span><br><span class="line">        m=<span class="built_in">buffer</span>(out);</span><br><span class="line">        out=(out+<span class="number">1</span>)%n;</span><br><span class="line">        signal(mutex);</span><br><span class="line">        signal(empty);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li>用信号量解决过独木桥问题：同一方向的行人可连续过桥，当某一方向有人过桥时，另一方向的行人必须等待；当某一方向无人过桥时，另一方向的行人可以过桥。  <ul><li>分析：独木桥问题是读者-写者问题的变形，同一方向的行人可以同时过桥，相当于读者可以同时读，可将两个方向的人看作两类不同的读者，同类读者可以同时读，不同读者只能互斥读。</li><li>答：<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//定义如下变量：</span></span><br><span class="line"><span class="keyword">int</span> countA = <span class="number">0</span> , countB = <span class="number">0</span>;    <span class="comment">//表示两个方向行人数量</span></span><br><span class="line">semaphore bridge = <span class="number">1</span> ;  <span class="comment">//实现互斥，仅一个桥</span></span><br><span class="line">semaphore mutexA = mutexB = <span class="number">1</span> ; <span class="comment">//AB两个方向的互斥</span></span><br><span class="line"><span class="comment">//A方向的所有行人对应的响应的算法，他们的动作的算法描述：</span></span><br><span class="line">PA()&#123;</span><br><span class="line">    wait(mutexA);</span><br><span class="line">    <span class="keyword">if</span>(countA==<span class="number">0</span>)&#123;</span><br><span class="line">        wait(bridge);</span><br><span class="line">        countA++;</span><br><span class="line">    &#125;</span><br><span class="line">    signal(mutexA);</span><br><span class="line">    过桥；</span><br><span class="line">    wait(mutexA);</span><br><span class="line">    countA-;</span><br><span class="line">    <span class="keyword">if</span>(countA==<span class="number">0</span>)&#123;</span><br><span class="line">        signal(bridge);</span><br><span class="line">        signal(mutexA);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//B方向与A方向类似，只需将mutexA和countA改为mutexB和countB</span></span><br></pre></td></tr></table></figure><blockquote><p>线程和进程的关系  </p><ol><li>一个进程可以有多个线程，但至少有一个线程；而一个线程只能在一个进程的地址空间内活动。</li><li>资源分配给进程，同一个进程的所有线程共享该进程所有资源。</li><li>CPU分配给线程，即真正在处理器运行的是线程。</li><li>线程在执行过程中需要协作同步，不同进程的线程间要利用消息通信的办法实现同步。</li></ol></blockquote></li></ul></li></ol><h1 id="第三章-处理机调度与死锁"><a href="#第三章-处理机调度与死锁" class="headerlink" title="第三章 处理机调度与死锁"></a>第三章 处理机调度与死锁</h1><h2 id="习题"><a href="#习题" class="headerlink" title="习题"></a>习题</h2><ul><li>在面向用户的调度准则中，<strong>优先权高的作业能获得到优先服务</strong></li><li><strong>响应时间快</strong>是选择分时系统中进程调度算法的重要准则</li><li><strong>平均周转时间短</strong>是批处理系统中选择作业调度的重要准则</li><li><strong>优先权高的作业能获得优先服务</strong>准则是为了照顾紧急作业用户的要求而设置的</li><li>作业调度是从处于<strong>后备</strong>状态的队列中选取作业投入运行</li><li><strong>周转时间</strong>是指作业进入系统到作业完成所经过的时间间隔</li><li><strong>时间片轮转</strong>算法不适合作业调度</li><li><strong>FCFS(先来先服务)调度算法</strong>只能采用非抢占调度方式</li><li><strong>时间片轮转法</strong>只能采用抢占调度方式</li><li>降低进程优先级的最合理的时机是<strong>进程的时间片用完</strong></li><li>在动态优先权中，随着作业时间的增加，其优先权将随之下降</li><li>若为每个作业建立一个进程，则为照顾短作业用户，应采用<strong>短作业优先</strong>算法；照顾紧急作业用户，应采取<strong>基于优先权的剥夺调度算法</strong>；为实现人机交互作用，采用<strong>时间片轮转法</strong>为兼顾短作业和长时间等待的作业，采用<strong>高响应比优先</strong>；为使短作业、长作业及交互作业用户都比较满意，则采用<strong>多级反馈队列调度算法</strong>；为使作业的平均周期最短，则采用<strong>短作业优先算法</strong></li><li>支持多道程序设计的操作系统在运行过程中，不断地选择新进程来实现CPU的共享，但其中<strong>有新进程进入就绪队列</strong>不是引起操作系统选择新进程的直接原因</li><li>EDF(Earliest Deadline First)算法选择<strong>截止时间最早的进程</strong>为下一个执行的进程</li><li>LLF(Least Laxity First)算法选择<strong>松弛度最低的进程</strong>作为下一个执行的进程</li><li>实时系统中的优先级倒置是指：<strong>高优先级的进程被低优先级的进程延迟或阻塞</strong></li><li>产生死锁的两大基本原因是<strong>系统资源不足</strong>和<strong>进程推进顺序不当</strong></li><li>系统产生死锁是指<strong>若干进程等待被其他进程所占用而又不可能释放的资源</strong></li><li>产生死锁的四个必要条件<strong>互斥条件、请求和保持条件、不可抢占条件、循环等待条件</strong></li><li>死锁的预防是通过破坏产生死锁的四个必要条件来实现的，<strong>一次性分配策略</strong>破坏了“请求与保持”条件；<strong>资源有序分配策略</strong>破坏了“循环等待”条件</li><li>安全状态是没有死锁的状态，非安全状态是有可能死锁的状态</li><li>死锁预防策略：<strong>资源有序分配</strong>；死锁避免策略：<strong>银行家算法</strong><h2 id="必会大题-1"><a href="#必会大题-1" class="headerlink" title="必会大题"></a>必会大题</h2><img src="https://i.jpg.dog/img/c52851f4850a058672621d3994eb2151.png" width = "500" height = "300" div align=1 /><img src="https://i.jpg.dog/img/63de51fef7777f1b138bef55fe8af73b.png" width = "500" height = "300" div align=2 /><img src="https://i.jpg.dog/img/b3102ad1305454485e0269d38767f4ad.png" width = "500" height = "300" div align=3 /></li></ul><h2 id="填空题"><a href="#填空题" class="headerlink" title="填空题"></a>填空题</h2><ul><li>高级调度又称<strong>作业调度</strong>，主要功能为<strong>按照一定的算法从外存的后备队列中选若干作业进入内存，并为他们创建进程</strong>；低级调度又称<strong>进程调度</strong>，主要功能是<strong>按照一定的算法从就绪队列中选一个进程投入运行</strong></li><li>作业调度必须做<strong>接纳多个作业</strong>和<strong>接纳哪些作业</strong>两个决定</li><li>进程调度的主要任务是<strong>保存CPU现场</strong>、<strong>按某种算法选择一个就绪进程</strong>、<strong>把CPU分配给新进程</strong>，进程调度的方式主要有<strong>抢占调度</strong>、<strong>非抢占调度</strong></li><li>在抢占调度方式中，抢占的主要原则主要有：<strong>时间片原则、短作业原则、优先权原则</strong></li><li>在设计进程调度的主要任务时，应考虑<strong>引起调度的因素、调度算法选择、就绪队列的组织</strong></li><li>为了使作业的平均周转时间最短，应选择<strong>短作业（进程）优先</strong>调度算法；使当前执行的进程总是优先权最高的进程，应选择<strong>立即抢占的高优先权优先</strong>调度算法；分时系统应选择<strong>时间片轮转</strong>调度算法</li><li>分时系统中，时间片选的太小会造成<strong>系统开销增大</strong>，时间片的大小一般选择为<strong>略大于一次典型的交互所需要的时间</strong></li><li>在采用动态优先权时，为避免一个地优先权的进程处于饥饿状态，可以<strong>随着进程等待时间的增加而提高其优先级</strong>，而为了避免一个高优先权的长作业长期垄断CPU，则可以<strong>随着进程运行时间的增加而降低其优先权</strong></li><li>高响应比优先调度算法综合考虑作业的<strong>运行时间</strong>和<strong>等待时间</strong>，因此会兼顾到长、短作业</li><li>死锁产生的主要原因是<strong>竞争资源</strong>和<strong>进程推动顺序非法</strong></li><li>死锁产生比必要条件是**互斥条件、请求与保持条件、不剥夺条件、环路等待条件</li><li>通过破坏死锁产生的四个必要条件可进行思索的预防，其中<strong>互斥</strong>条件一般是不允许破坏的，一次性分配所有资源破坏的是其中的<strong>请求与保持条件</strong>，资源的有序分配破坏的是其中的<strong>环路等待</strong>条件</li><li>避免死锁，允许进程动态的申请资源，但系统在进行分配时应先计算资源分配的<strong>安全新</strong>，若此次分配不会导致系统进入<strong>不安全状态</strong>，便将资源分配给他，否则便让进程<strong>等待</strong></li><li>解决死锁问题的方法有<strong>预防、避免、检测、解除等</strong>，一次性分配所有资源采用的是其中的<strong>预防死锁</strong>方法，银行家算法采用的是<strong>避免死锁</strong>方法</li><li>根据死锁定理，一个状态为死锁状态的充分条件是当且仅当该状态的资源分配图是<strong>不可完全简化</strong>时</li><li><strong>撤销进程</strong>和<strong>剥夺资源</strong>是解除死锁的两种常用方法</li></ul><h1 id="第四章-存储器管理"><a href="#第四章-存储器管理" class="headerlink" title="第四章 存储器管理"></a>第四章 存储器管理</h1><h2 id="习题-1"><a href="#习题-1" class="headerlink" title="习题"></a>习题</h2><ul><li>静态重定位是在作业的<strong>装入过程</strong>中进行的</li><li>动态重定位是在作业的<strong>执行过程</strong>中进行的</li><li>在进程的地址空间中，有一条将第1000单元中的数据装入机损其RI的指令“LOAD RI,1000”，采用动态重定位技术时，装入内存后，<strong>该指令的第二个操作数仍为1000</strong></li><li>静态链接是在<strong>装入程序之前</strong>进行的</li><li>动态链接实在<strong>装入某段程序时</strong>或<strong>调用某段程序时</strong>进行的，在<strong>调用某段程序时</strong>进行链接，可提高内存利用率</li><li>要保证进程在主存中被改变了位置后仍能正确执行，则对著空间采用<strong>动态重定位</strong></li><li>在回收内存时可能出现释放区与插入点前F1相邻接，此时应<strong>以F1分区的表项为新表项，同时修改新表项的大小和起始地址</strong>;释放区与插入点后一分区F2邻接，此时应<strong>以F2分区的表项为新表项，，同时修改新表项的大小和起始地址</strong>；释放区不与F1、F2相邻接，此时应<strong>为会收区建立一个分区表项，填上分区的大小和起始地址</strong>；释放区同时与F1、F2邻接，此时**以F1分区的表项为新表项，但修改新表项的大小且还要删除F2所对应的表项</li><li>在动态分区式内存管理中，倾向于优先使用低址部分空闲区的算法是<strong>首次适应算法</strong>；能使内存空间中空闲区分布的均匀的算法是<strong>循环首次适应法</strong>；每次分配时，把既能满足要求，有事最小的空闲分区分配给进程的算法是<strong>最佳适应算法</strong></li><li>在首次适应算法中，要求空闲分区按<strong>空闲区起始地址递增</strong>的顺序形成空闲分区链</li><li>在最佳适应算法中，是按<strong>空闲区大小递增</strong>的顺序形成空闲分区链</li><li>在最坏适应算法中，是按<strong>空闲区大小递减</strong>的顺序形成空闲分区链</li><li>对外存对换区的管理应以<strong>提高换入换出速度</strong>为主要目标</li><li>对外存文件区的管理应以<strong>提高存储空间利用率</strong>为主要目标</li><li>由连续分配方式发展为分页存储管理方式的主要推动力量是<strong>提高内存利用率</strong>；由分页系统为分段系统的主要推动力量是<strong>满足用户需求</strong>；进而发展为段页式系统的主要动力是<strong>既能满足用户需求，又能提高内存利用率</strong></li><li>分页系统中，主存分配单位式<strong>物理块</strong>；地址转换工作是由<strong>硬件</strong>完成的</li><li>在没有块表的情况下，分页系统每访问一次数据，要访问<strong>2</strong>次内存</li><li>在页式存储管理中，其虚拟地址空间是<strong>一维</strong>的</li><li>在段式存储管理中，其虚拟地址空间是<strong>二维</strong>的</li><li>在段页式存储管理系统中，其虚拟地址空间是<strong>二维</strong>的</li><li>通常情况下，<strong>固定分区</strong>支持多通道程序设计、管理最简单、但存储碎片多；<strong>页式</strong>使内存碎片尽量少，而且使内存使用率最高</li><li><strong>页式和段页式</strong>存储管理方式，会产生内部碎片</li><li><strong>动态分区方式和段页式</strong>存储管理方式，会产生外部碎片<h2 id="必会大题-2"><a href="#必会大题-2" class="headerlink" title="必会大题"></a>必会大题</h2><img src="https://i.jpg.dog/img/ac88ae7666dc70fe21430f95513ebee8.png" width = "600" height = "400" div align=4 /><img src="https://i.jpg.dog/img/a51f2a3c1e05fe4916988b96adc13f2b.png" width = "600" height = "400" div align=5 /><img src="https://i.jpg.dog/img/6189ac090dad412e3d30adba23466d2c.png" width = "600" height = "400" div align=6 /><img src="https://i.jpg.dog/img/fde8d679cb86d5c4778aa30b94e20bf2.png" width = "600" height = "400" div align=7 /></li></ul><blockquote><h2 id="本章知识点总结"><a href="#本章知识点总结" class="headerlink" title="本章知识点总结"></a>本章知识点总结</h2><h2 id="分页存储管理方式"><a href="#分页存储管理方式" class="headerlink" title="分页存储管理方式"></a>分页存储管理方式</h2><ul><li>在该方式中，将用户程序的地址空间分为若干个固定大小的区域，称为“页”或者“页面”。典型的页面大小为1KB.相应的，也将内存空间分为若干物理块或页框，页和块的大小相同。这样可将用户程序的任一页放入任一物理块中，实现了离散分配。<h2 id="分段存储管理方式"><a href="#分段存储管理方式" class="headerlink" title="分段存储管理方式"></a>分段存储管理方式</h2></li><li>这是为了满足用户要求而形成的一种存储管理方式。</li><li>他把用户程序的地址空间分为若干大小不同的段，每段可定义一组相对完整的信息。在存储器分配时，以段为单位，这些段在内存中可以不相互邻接，所以也同样实现了离散分配。<h2 id="段页式存储管理方式"><a href="#段页式存储管理方式" class="headerlink" title="段页式存储管理方式"></a>段页式存储管理方式</h2></li><li>这是分页和分段两种存储管理方式相结合的产物。他同时也具备两者的优点，是目前应用最广泛的一种存储管理方式。<h2 id="分页和分段的主要区别"><a href="#分页和分段的主要区别" class="headerlink" title="分页和分段的主要区别"></a>分页和分段的主要区别</h2></li></ul><ol><li>页是信息的物理单位</li><li>页的大小固定且由系统决定</li><li>分页的用户程序地址空间是一维的</li></ol></blockquote><h1 id="第五章-虚拟存储器"><a href="#第五章-虚拟存储器" class="headerlink" title="第五章 虚拟存储器"></a>第五章 虚拟存储器</h1><h2 id="习题-2"><a href="#习题-2" class="headerlink" title="习题"></a>习题</h2><ul><li>要求作业在运行之前，必须全部装入内存，且在运行过程中也必须一直驻留内存</li><li>虚拟存储器管理系统的基础是程序的局部性理论。此理论的基本含义是<strong>程序执行时对主存的访问是不均匀的</strong>；局部性理论有两种表现形式，<strong>时间局部性</strong>和<strong>空间局部性</strong></li><li>时间局部性的意义在于<strong>最近被访问的单元，很可能在不久的将来还要被访问</strong></li><li>空间局部性的意义在于<strong>最近被访问的单元，很可能塔附近的单元也即将被访问</strong></li><li>虚拟存储器最基本的特征是<strong>多次性</strong></li><li>多次性特征主要基于<strong>局部性原理</strong></li><li>实现虚拟存储器的目的是<strong>扩充主存容量</strong></li><li>在请求调页系统中有着多种置换算法，选择最先进入内存的页面予以淘汰的算法称为<strong>FIFO算法</strong>；选择以后不再使用的页面予以淘汰的算法称为<strong>OPT算法</strong>；选择自上次访问以来经历时间最长的页面予以淘汰的算法称为<strong>LRU算法</strong>；选择自某时刻开始以来，访问次数最少的页面予以淘汰的算法称为<strong>LFU算法</strong></li><li>系统抖动是指<strong>被调出的页面又立刻需要被调入所形成的频繁调入调出现象</strong></li><li>抖动产生原因只要是<strong>置换算法选择不当</strong></li><li>测得某个请求调页的计算机系统部分状态数据为：CPU利用率20%，用于对换空间的硬盘利用率97.7%，其他设备的利用率5%。由此断定系统出现异常。此种情况，<strong>减少运行的进程数</strong>和<strong>安装一个更快的硬盘</strong>能提高CPU的利用率</li><li><img src="https://i.jpg.dog/img/0eb72021f1062344c6b191702bd43b71.png" width = "600" height = "400" div align=8 /></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;第一章&quot;&gt;&lt;a href=&quot;#第一章&quot; class=&quot;headerlink&quot; title=&quot;第一章&quot;&gt;&lt;/a&gt;第一章&lt;/h1&gt;&lt;h2 id=&quot;1-1-1-2节&quot;&gt;&lt;a href=&quot;#1-1-1-2节&quot; class=&quot;headerlink&quot; title=&quot;1.1-1.2节&quot;&gt;&lt;/a&gt;1.1-1.2节&lt;/h2&gt;&lt;blockquote&gt;
&lt;h3 id=&quot;操作系统的目标&quot;&gt;&lt;a href=&quot;#操作系统的目标&quot; class=&quot;headerlink&quot; title=&quot;操作系统的目标&quot;&gt;&lt;/a&gt;操作系统的目标&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;在计算机系统上配置操作系统，其主要目的是&lt;strong&gt;方便性、有效性、可扩充性、和开放性&lt;/strong&gt;&lt;h3 id=&quot;操作系统的主要作用&quot;&gt;&lt;a href=&quot;#操作系统的主要作用&quot; class=&quot;headerlink&quot; title=&quot;操作系统的主要作用&quot;&gt;&lt;/a&gt;操作系统的主要作用&lt;/h3&gt;&lt;/li&gt;
&lt;li&gt;是配置在计算机硬件上的第一层软件，是对硬件系统的首次扩充，主要作用是管理好这些设备，提高他们的利用率和系统的吞吐量，并为用户和应用程序提供一个简单的接口，便于用户使用。&lt;h3 id=&quot;具体作用如下&quot;&gt;&lt;a href=&quot;#具体作用如下&quot; class=&quot;headerlink&quot; title=&quot;具体作用如下&quot;&gt;&lt;/a&gt;具体作用如下&lt;/h3&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;ol&gt;
&lt;li&gt;OS作为用户与计算机硬件系统之间的接口&lt;/li&gt;
&lt;li&gt;OS作为计算机系统资源管理的管理者&lt;/li&gt;
&lt;li&gt;OS实现了对计算机资源的抽象&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="笔记" scheme="https://www.sdyunet.cn/categories/%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="笔记" scheme="https://www.sdyunet.cn/tags/%E7%AC%94%E8%AE%B0/"/>
    
      <category term="操作系统" scheme="https://www.sdyunet.cn/tags/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/"/>
    
      <category term="期末" scheme="https://www.sdyunet.cn/tags/%E6%9C%9F%E6%9C%AB/"/>
    
  </entry>
  
  <entry>
    <title>射频卡数据破解与利用</title>
    <link href="https://www.sdyunet.cn/2020/01/03/%E5%B0%84%E9%A2%91%E5%8D%A1%E6%95%B0%E6%8D%AE%E7%A0%B4%E8%A7%A3%E4%B8%8E%E5%88%A9%E7%94%A8/"/>
    <id>https://www.sdyunet.cn/2020/01/03/%E5%B0%84%E9%A2%91%E5%8D%A1%E6%95%B0%E6%8D%AE%E7%A0%B4%E8%A7%A3%E4%B8%8E%E5%88%A9%E7%94%A8/</id>
    <published>2020-01-03T01:33:34.000Z</published>
    <updated>2020-03-19T01:41:21.176Z</updated>
    
    <content type="html"><![CDATA[<h1 id="关于射频卡"><a href="#关于射频卡" class="headerlink" title="关于射频卡"></a>关于射频卡</h1><h2 id="什么是射频卡"><a href="#什么是射频卡" class="headerlink" title="什么是射频卡?"></a>什么是射频卡?</h2><blockquote><p>射频识别（RFID）是 Radio Frequency Identification 的缩写。<br>其原理为阅读器与标签之间进行非接触式的数据通信，达到识别目标的目的。RFID 的应用非常广泛，典型应用有动物晶片、汽车晶片防盗器、门禁管制、停车场管制、生产线自动化、物料管理。<br>——参考百度百科“<a href="https://baike.baidu.com/item/%E5%B0%84%E9%A2%91%E8%AF%86%E5%88%AB%E6%8A%80%E6%9C%AF/9524139" target="_blank" rel="noopener">射频识别技术</a>”词条。  </p></blockquote><a id="more"></a><p>利用RFID技术生产的卡片一般称为射频卡。</p><h2 id="卡片分类及可利用卡片分类"><a href="#卡片分类及可利用卡片分类" class="headerlink" title="卡片分类及可利用卡片分类"></a>卡片分类及可利用卡片分类</h2><ul><li>UID卡：除0扇区不可写，其他扇区均可重复擦写，0扇区的数据为预设好，无法重写</li><li>CUID卡：所有扇区均可重复擦写</li><li>FUID卡：0扇区只能写入一次，写入后不可更改</li></ul><h2 id="关于M1卡片"><a href="#关于M1卡片" class="headerlink" title="关于M1卡片"></a>关于M1卡片</h2><ul><li>M1卡片是目前几种比较常见的几种卡片之一，多用于电梯门禁卡，园区消费卡等场景，包括部分公交卡亦是如此。</li><li>M1卡片本身存在一些漏洞，使得可以通过一些特殊手段进行密钥的破解，从而得到扇区和块的十六进制数据。</li></ul><h2 id="M1卡片存储逻辑结构"><a href="#M1卡片存储逻辑结构" class="headerlink" title="M1卡片存储逻辑结构"></a>M1卡片存储逻辑结构</h2><p>此处以13.56MHZ的MIFAREClassic的1K卡为例介绍：<br><img src="https://i.jpg.dog/img/5d1d67db7d9621feaae05e5c2ffd9a3d.jpg" alt="扇区示意图">  </p><ul><li>该卡片共16个扇区，分别为扇区0到扇区15</li><li>每个扇区分为4个块（即图中的每一行）</li><li>扇区0为卡片信息扇区，0扇区0块的前8位为卡片的UID（即卡片的编码，该编码全球唯一），0块的其他位为卡片的厂商信息，一般不需要改动（有时候改动会引起非加密卡被读作加密卡的错误）</li><li>每个扇区的0块的前12位(16进制)及后12位为该扇区的密钥A及密钥B</li><li>0扇区的密钥A/B必定为全F（非加密）</li><li>1-15扇区的0、1、2块为数据存储的块，3块为密钥块，可能存在密钥A/B</li><li>其他详见图示中的颜色指示</li></ul><h1 id="数据破解与利用"><a href="#数据破解与利用" class="headerlink" title="数据破解与利用"></a>数据破解与利用</h1><h2 id="准备阶段"><a href="#准备阶段" class="headerlink" title="准备阶段"></a>准备阶段</h2><ul><li>读写卡硬件及软件(约RMB30)<ul><li>PN532模块一个</li><li>USB转TTL模块一套</li><li>连接线</li><li><img src="https://i.jpg.dog/img/2d836f072c48ac6de77535fcb9b702e8.png" alt="图片来自酷安@七岁超可爱"></li><li><img src="https://i.jpg.dog/img/0a46a98a948821af25c84ad1b931a45f.png" alt="0a46a98a948821af25c84ad1b931a45f.png"></li><li>或者再有钱可以上功能强大的变色龙等</li></ul></li><li>软件（驱动程序、上位机、十六进制编辑器，手机NFC读写工具、MifareClassicTool.apk等）<a href="https://www.lanzous.com/i6lyvjg" target="_blank" rel="noopener">下载地址</a></li></ul><h2 id="原卡数据破解过程"><a href="#原卡数据破解过程" class="headerlink" title="原卡数据破解过程"></a>原卡数据破解过程</h2><ul><li>连接pn532和电脑，并按提示（读驱动文件夹中的说明）正确安装驱动</li><li>打开上位机，连接pn532</li><li>将卡片放在pn532上，点击读取数据，等待读取破解完成</li><li>读取完成后点数据列表的左上方的箭头，对数据进行保存（.dump格式）</li></ul><h2 id="数据含义破解"><a href="#数据含义破解" class="headerlink" title="数据含义破解"></a>数据含义破解</h2><ul><li>读取到数据后可用winhex等软件对保存的16进制文件进行数据分析</li><li>多次消费并读取数据，对比变更的数据，即金额信息</li><li>破解编码规律（自行探索）</li><li>根据得到的各种信息及需求伪造数据</li><li>数据使用上位机的写IC卡功能写入空白卡（推荐使用CUID空白卡）</li></ul><h1 id="某鲁软件园附近某大厦电梯卡破解"><a href="#某鲁软件园附近某大厦电梯卡破解" class="headerlink" title="某鲁软件园附近某大厦电梯卡破解"></a>某鲁软件园附近某大厦电梯卡破解</h1><ul><li>前期参考上面步骤</li><li>每张电梯卡能到达的楼层不同，数据存在区别</li><li>改电梯卡每次读取时会尝试写入0扇区为空（反复制卡片），所以采用FUID卡片进行卡片复制，解决重写验证。</li></ul><h1 id="声明："><a href="#声明：" class="headerlink" title="声明："></a>声明：</h1><ul><li>本文章仅供技术交流，请勿用于违法犯罪行为</li><li>对阅读本文导致的违法犯罪行为，请违法人员自行承担相关责任，所有后果及责任与本文作者无关</li><li>请勿未授权转载</li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;关于射频卡&quot;&gt;&lt;a href=&quot;#关于射频卡&quot; class=&quot;headerlink&quot; title=&quot;关于射频卡&quot;&gt;&lt;/a&gt;关于射频卡&lt;/h1&gt;&lt;h2 id=&quot;什么是射频卡&quot;&gt;&lt;a href=&quot;#什么是射频卡&quot; class=&quot;headerlink&quot; title=&quot;什么是射频卡?&quot;&gt;&lt;/a&gt;什么是射频卡?&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;射频识别（RFID）是 Radio Frequency Identification 的缩写。&lt;br&gt;其原理为阅读器与标签之间进行非接触式的数据通信，达到识别目标的目的。RFID 的应用非常广泛，典型应用有动物晶片、汽车晶片防盗器、门禁管制、停车场管制、生产线自动化、物料管理。&lt;br&gt;——参考百度百科“&lt;a href=&quot;https://baike.baidu.com/item/%E5%B0%84%E9%A2%91%E8%AF%86%E5%88%AB%E6%8A%80%E6%9C%AF/9524139&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;射频识别技术&lt;/a&gt;”词条。  &lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="笔记" scheme="https://www.sdyunet.cn/categories/%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="射频卡" scheme="https://www.sdyunet.cn/tags/%E5%B0%84%E9%A2%91%E5%8D%A1/"/>
    
      <category term="破解" scheme="https://www.sdyunet.cn/tags/%E7%A0%B4%E8%A7%A3/"/>
    
      <category term="复制" scheme="https://www.sdyunet.cn/tags/%E5%A4%8D%E5%88%B6/"/>
    
      <category term="数据篡改" scheme="https://www.sdyunet.cn/tags/%E6%95%B0%E6%8D%AE%E7%AF%A1%E6%94%B9/"/>
    
      <category term="复现" scheme="https://www.sdyunet.cn/tags/%E5%A4%8D%E7%8E%B0/"/>
    
      <category term="M1卡" scheme="https://www.sdyunet.cn/tags/M1%E5%8D%A1/"/>
    
      <category term="UID" scheme="https://www.sdyunet.cn/tags/UID/"/>
    
  </entry>
  
  <entry>
    <title>HCIA学习笔记(5/5)</title>
    <link href="https://www.sdyunet.cn/2020/01/03/HCIA%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B05/"/>
    <id>https://www.sdyunet.cn/2020/01/03/HCIA%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B05/</id>
    <published>2020-01-03T01:20:13.000Z</published>
    <updated>2020-03-19T01:42:39.751Z</updated>
    
    <content type="html"><![CDATA[<h1 id="HCIA学习笔记-5-5"><a href="#HCIA学习笔记-5-5" class="headerlink" title="HCIA学习笔记(5/5)"></a>HCIA学习笔记(5/5)</h1><h2 id="DHCP应用场景："><a href="#DHCP应用场景：" class="headerlink" title="DHCP应用场景："></a>DHCP应用场景：</h2><ul><li>DHCP服务器为网络内的设备自动分配IP地址<h2 id="DHCP报文："><a href="#DHCP报文：" class="headerlink" title="DHCP报文："></a>DHCP报文：</h2><img src="https://i.jpg.dog/img/967abba6cfa20c4c997b2c3500d13fb8.png" alt="报文类型 含义">    <a id="more"></a><h2 id="DHCP工作原理："><a href="#DHCP工作原理：" class="headerlink" title="DHCP工作原理："></a>DHCP工作原理：</h2><h3 id="主机A-DHCP服务器"><a href="#主机A-DHCP服务器" class="headerlink" title="主机A    DHCP服务器"></a>主机A    DHCP服务器</h3></li></ul><ol><li>DHCP Discover(广播)→</li><li>DHCP Offer(单播)←</li><li>DHCP Request(广播)→</li><li>DHCP ACK(单播)←<blockquote><p>DHCP续约两个点50%和87.5%，如未收到服务器响应，则会申请重新绑定IP</p></blockquote></li></ol><h2 id="服务器命令："><a href="#服务器命令：" class="headerlink" title="服务器命令："></a>服务器命令：</h2><pre>DHCP enable //全局开启DHCP服务ip pool <名称> //创建地址池及名称network 192.168.1.0 mask 24 //定义地址池地址及掩码gatway-list <网关地址>192.168.1.254 //定义网关dns-list <DNS服务器地址> //定义DNS服务器lease day 3 hour 3 minute 3 //修改租期undo ip pool <名称> //删除整个地址池</pre><pre>dhcp select global //端口下下发IP地址选择全局IP地址dhcp select interface //端口dhcp下发改为端口dhcp server dns-list 8.8.8.8 //定义DNS服务器</pre><h2 id="NAT网络地址转换："><a href="#NAT网络地址转换：" class="headerlink" title="NAT网络地址转换："></a>NAT网络地址转换：</h2><ul><li>相关命令：<pre>在路由器的wan口添加缺省静态路由：ip router-static 0.0.0.0 0 gigabitethrnet 0/0/0 202.102.1.1端口下添加NAT静态转发规则：nat static global <外网地址> inside <内网地址></pre></li><li>创建NAT地址池：<pre>nat address-group <1-7> <起始IP> <结束IP>如：nat address-group 1 202.102.1.100 202.102.1.150</pre><h2 id="ACL访问控制协议："><a href="#ACL访问控制协议：" class="headerlink" title="ACL访问控制协议："></a>ACL访问控制协议：</h2></li><li>配置ACL协议命令：<pre>acl 2000 //acl参数2000-4999分为三段具有不同含义，详情参考命令说明rule permit source 192.168.1.0 0.0.0.255 //此处的掩码为通配符掩码，0为严格匹配</pre><h2 id="ACL与NAT结合使用："><a href="#ACL与NAT结合使用：" class="headerlink" title="ACL与NAT结合使用："></a>ACL与NAT结合使用：</h2><pre>nat outbound 2000 address-group 1 //将acl 2000的包通过nat group1转发出去</pre></li></ul><h2 id="EasyIP配置："><a href="#EasyIP配置：" class="headerlink" title="EasyIP配置："></a>EasyIP配置：</h2><pre>nat outbound 2000 //网内主机少时，直接可以不用划分address-group，通过边界路由器的wan口地址直接转发</pre>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;HCIA学习笔记-5-5&quot;&gt;&lt;a href=&quot;#HCIA学习笔记-5-5&quot; class=&quot;headerlink&quot; title=&quot;HCIA学习笔记(5/5)&quot;&gt;&lt;/a&gt;HCIA学习笔记(5/5)&lt;/h1&gt;&lt;h2 id=&quot;DHCP应用场景：&quot;&gt;&lt;a href=&quot;#DHCP应用场景：&quot; class=&quot;headerlink&quot; title=&quot;DHCP应用场景：&quot;&gt;&lt;/a&gt;DHCP应用场景：&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;DHCP服务器为网络内的设备自动分配IP地址&lt;h2 id=&quot;DHCP报文：&quot;&gt;&lt;a href=&quot;#DHCP报文：&quot; class=&quot;headerlink&quot; title=&quot;DHCP报文：&quot;&gt;&lt;/a&gt;DHCP报文：&lt;/h2&gt;&lt;img src=&quot;https://i.jpg.dog/img/967abba6cfa20c4c997b2c3500d13fb8.png&quot; alt=&quot;报文类型 含义&quot;&gt;
    
    </summary>
    
    
      <category term="笔记" scheme="https://www.sdyunet.cn/categories/%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="笔记" scheme="https://www.sdyunet.cn/tags/%E7%AC%94%E8%AE%B0/"/>
    
      <category term="网络" scheme="https://www.sdyunet.cn/tags/%E7%BD%91%E7%BB%9C/"/>
    
      <category term="HCIA" scheme="https://www.sdyunet.cn/tags/HCIA/"/>
    
      <category term="网工" scheme="https://www.sdyunet.cn/tags/%E7%BD%91%E5%B7%A5/"/>
    
  </entry>
  
  <entry>
    <title>HCIA学习笔记(4/5)</title>
    <link href="https://www.sdyunet.cn/2019/12/31/HCIA%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B04/"/>
    <id>https://www.sdyunet.cn/2019/12/31/HCIA%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B04/</id>
    <published>2019-12-30T23:08:50.000Z</published>
    <updated>2020-03-19T01:42:45.485Z</updated>
    
    <content type="html"><![CDATA[<h1 id="HCIA学习笔记-4-5"><a href="#HCIA学习笔记-4-5" class="headerlink" title="HCIA学习笔记(4/5)"></a>HCIA学习笔记(4/5)</h1><h1 id="OSPF-链路状态路由协议：开放式最短路径优先-OSPF-协议"><a href="#OSPF-链路状态路由协议：开放式最短路径优先-OSPF-协议" class="headerlink" title="OSPF-链路状态路由协议：开放式最短路径优先(OSPF)协议"></a>OSPF-链路状态路由协议：开放式最短路径优先(OSPF)协议</h1><h2 id="版本分为"><a href="#版本分为" class="headerlink" title="版本分为"></a>版本分为</h2><ul><li>v2适用于IPv4</li><li>v3适用于IPv6<h2 id="链路状态信息LSA-Link-State"><a href="#链路状态信息LSA-Link-State" class="headerlink" title="链路状态信息LSA(Link State)"></a>链路状态信息LSA(Link State)</h2></li><li>链路类型</li><li>链路开销</li><li>链路接口IP</li><li>链路接口子网掩码</li><li>链路上的路由器<h2 id="链路状态数据库（LSDB）"><a href="#链路状态数据库（LSDB）" class="headerlink" title="链路状态数据库（LSDB）"></a>链路状态数据库（LSDB）</h2></li><li>保存链路状态信息<a id="more"></a><h2 id="LSA泛洪"><a href="#LSA泛洪" class="headerlink" title="LSA泛洪"></a>LSA泛洪</h2></li><li>同步了链路数据库LSDB,同步了路由表<h2 id="LSA协议工作方式"><a href="#LSA协议工作方式" class="headerlink" title="LSA协议工作方式"></a>LSA协议工作方式</h2></li><li>LSA泛洪</li><li>同步LSA</li><li>计算LSA<h2 id="OSPF报文封装在IP报文中，协议号为89"><a href="#OSPF报文封装在IP报文中，协议号为89" class="headerlink" title="OSPF报文封装在IP报文中，协议号为89"></a>OSPF报文封装在IP报文中，协议号为89</h2>##OSPF报文类型</li><li>Hello报文：发现ospf邻居，协商OSPF邻居，建立OSPF邻居，维护OSPF邻居(周期性的发包)</li><li>DD(database description)数据库描述报文：互相描述数据库</li><li>LSR(LSA Request)报文:用于请求同步</li><li>LSU(LSA Updata):更新，用于同步数据库</li><li>LSACK(LSA Acknowledgement)报文:用于确认数据库同步<h2 id="OSPF邻居状态机"><a href="#OSPF邻居状态机" class="headerlink" title="OSPF邻居状态机"></a>OSPF邻居状态机</h2></li><li>作用：标识OSPF工作在那个阶段</li><li><img src="https://i.jpg.dog/img/c7d7e46c38d6107b700910f58645444c.png" alt="OSPF邻居状态机"></li></ul><h2 id="Route-ID、邻居和邻接"><a href="#Route-ID、邻居和邻接" class="headerlink" title="Route ID、邻居和邻接"></a>Route ID、邻居和邻接</h2><p>routeID格式类似于IP地址，若不指定，则OSPF自动选择一个接口IP地址作为routeID</p><h2 id="OSPF区域"><a href="#OSPF区域" class="headerlink" title="OSPF区域"></a>OSPF区域</h2><p><img src="https://i.jpg.dog/img/7ce4365a43c9a29295f684f7ff41e2a8.png" alt="OSPF区域"></p><ul><li>每个区域都维护一个独立的LSDB</li><li>Area 0 是骨干区域，其他区域都必须于此区域相连</li><li>区域是基于路由器接口划分的</li><li>RTA、RTB、RTC这种位于区域边界的路由器也被叫做区域边界路由器（ABR）</li><li>AS边界路由器叫做ASBR，用BGP协议连接路由</li></ul><h2 id="划分OSPF区域的目的"><a href="#划分OSPF区域的目的" class="headerlink" title="划分OSPF区域的目的"></a>划分OSPF区域的目的</h2><ul><li>减小LSDB</li><li>减轻路由器的压力<h2 id="DR邻接关系路由与BDR备份邻接关系路由选择条件"><a href="#DR邻接关系路由与BDR备份邻接关系路由选择条件" class="headerlink" title="DR邻接关系路由与BDR备份邻接关系路由选择条件"></a>DR邻接关系路由与BDR备份邻接关系路由选择条件</h2></li><li>优先级小的优先，默认全为1</li><li>优先级相同时，路由ID越大的优先<h2 id="为什么选择DR与BDR"><a href="#为什么选择DR与BDR" class="headerlink" title="为什么选择DR与BDR"></a>为什么选择DR与BDR</h2></li><li>减少LSA泛洪</li><li>减少邻接关系<h2 id="邻居关系与邻接关系的区别"><a href="#邻居关系与邻接关系的区别" class="headerlink" title="邻居关系与邻接关系的区别"></a>邻居关系与邻接关系的区别</h2></li><li>是否直接同步数据库</li><li>选举DR/BDR是基于路由器接口来选的</li><li>DR有不可抢占性。<h2 id="OSPF路由协议相关命令"><a href="#OSPF路由协议相关命令" class="headerlink" title="OSPF路由协议相关命令"></a>OSPF路由协议相关命令</h2><pre>ospf route-id 1.1.1.1area 0network 10.1.1.0 0.0.0.255network 172.16.1.0 0.0.0.255network 192.168.1.0 0.0.0.255display ospf pear brief //查看所有OSPF邻居关系display ospf interface gigabitethernet 0/0/0 //查看是否为DR在某端口下：ospf dr-priority 100 //更改路由器端口选举DR的优先级（注意，DR确认后有不可抢夺性）</pre></li></ul><h1 id="STP协议（生成树协议）"><a href="#STP协议（生成树协议）" class="headerlink" title="STP协议（生成树协议）"></a>STP协议（生成树协议）</h1><ul><li>RSTP:快速生成树协议</li><li>MSTP:多生成树协议,默认运行的协议<h2 id="STP协议数据包"><a href="#STP协议数据包" class="headerlink" title="STP协议数据包"></a>STP协议数据包</h2></li><li>BPDU桥协议数据单元<h2 id="交换机环路引起的问题"><a href="#交换机环路引起的问题" class="headerlink" title="交换机环路引起的问题"></a>交换机环路引起的问题</h2></li><li>广播风暴：交换机环路。</li><li>MAC地址表震荡<h2 id="STP作用："><a href="#STP作用：" class="headerlink" title="STP作用："></a>STP作用：</h2></li><li>通过阻塞交换机的冗余端口达到防环的目的，并且实现链路备份<h2 id="生成树的根被叫做根交换机，也叫根桥。"><a href="#生成树的根被叫做根交换机，也叫根桥。" class="headerlink" title="生成树的根被叫做根交换机，也叫根桥。"></a>生成树的根被叫做根交换机，也叫根桥。</h2><h2 id="root-port-根端口选举-RP"><a href="#root-port-根端口选举-RP" class="headerlink" title="root port (根端口选举)RP"></a>root port (根端口选举)RP</h2></li><li>非根交换机连接根交换机最优的端口</li><li>一台非根交换机只有一个非根端口<h2 id="Desidnate-port（指定端口）DP"><a href="#Desidnate-port（指定端口）DP" class="headerlink" title="Desidnate-port（指定端口）DP"></a>Desidnate-port（指定端口）DP</h2></li><li>交换机与交换机间链路到达根交换机最优的接口。<h2 id="Alternate-port堵塞端口（预备端口）AP"><a href="#Alternate-port堵塞端口（预备端口）AP" class="headerlink" title="Alternate-port堵塞端口（预备端口）AP"></a>Alternate-port堵塞端口（预备端口）AP</h2></li><li>既不是根端口也不是指定端口，则是预备端口，将被阻塞，不进行通信。</li></ul><h2 id="STP工作原理"><a href="#STP工作原理" class="headerlink" title="STP工作原理"></a>STP工作原理</h2><ol><li>选举根交换机（根桥）</li><li>每个非根桥交换机选举一个根端口</li><li>每个网段选举一个指定端口</li></ol><h2 id="根桥选举规则"><a href="#根桥选举规则" class="headerlink" title="根桥选举规则"></a>根桥选举规则</h2><ul><li>优先级越小越优先，默认32768，可以修改，只能改成4096的倍数，且范围在0-65535之间，BID桥ID</li><li>交换机MAC地址，越小越优先<h2 id="根端口RD选举规则"><a href="#根端口RD选举规则" class="headerlink" title="根端口RD选举规则"></a>根端口RD选举规则</h2></li><li>根据路径开销越小越优先：百兆20W   千兆2W    </li><li>比较对端的桥ID，越小越优先</li><li>比较对端的PID,越小越优先(PID：端口优先级+端口号,优先级默认128,范围0-240,步长16）<h2 id="指定端口DP选举规则"><a href="#指定端口DP选举规则" class="headerlink" title="指定端口DP选举规则"></a>指定端口DP选举规则</h2></li><li>根路径开销，越小越优先</li><li>比较两端桥ID，越小越优先</li><li>比较本端的PID，越小越优先<h2 id="交换机端口状态30秒构建生成树"><a href="#交换机端口状态30秒构建生成树" class="headerlink" title="交换机端口状态30秒构建生成树"></a>交换机端口状态30秒构建生成树</h2></li><li>listening    侦听    15秒</li><li>learning 学习    15秒</li><li>根端口    forwarding    转发</li><li>指定端口    forwarding    </li><li>预备端口    discard ing    关闭</li></ul><h1 id="LAN局域网广播域"><a href="#LAN局域网广播域" class="headerlink" title="LAN局域网广播域"></a>LAN局域网广播域</h1><h2 id="VLAN-VLAN划分是基于交换机的接口的"><a href="#VLAN-VLAN划分是基于交换机的接口的" class="headerlink" title="VLAN(VLAN划分是基于交换机的接口的)"></a>VLAN(VLAN划分是基于交换机的接口的)</h2><ul><li>逻辑VLAN</li><li>虚拟VLAN<h2 id="查看VLAN命令"><a href="#查看VLAN命令" class="headerlink" title="查看VLAN命令"></a>查看VLAN命令</h2><pre>display vlandisplay port vlan </pre><h2 id="创建VLAN命令"><a href="#创建VLAN命令" class="headerlink" title="创建VLAN命令"></a>创建VLAN命令</h2><pre>vlan batch 10 20 30 //批量创建VLANvlan 40 //创建vlan并进入该vlan设置</pre><h2 id="VLAN三种链路类型"><a href="#VLAN三种链路类型" class="headerlink" title="VLAN三种链路类型"></a>VLAN三种链路类型</h2></li><li>Hybrid:华为独有，接入链接通用</li><li>access:接入PC时的端口</li><li>trunk:交换机之间的链接<h2 id="划分端口到VLAN命令"><a href="#划分端口到VLAN命令" class="headerlink" title="划分端口到VLAN命令"></a>划分端口到VLAN命令</h2></li><li>access：<pre><br>port link-type access<br>port defult vlan 10<br></pre></li><li>trunk:<pre><br>port link-type trunk<br>port trunk pvid vlan 10<br></pre></li><li>hybrid:<pre><br>port link-type<br>port hybrid pvid vlan 10<br></pre></li></ul><h2 id="各链路类型对Tag处理"><a href="#各链路类型对Tag处理" class="headerlink" title="各链路类型对Tag处理"></a>各链路类型对Tag处理</h2><p><img src="https://i.jpg.dog/img/971fe11d497a9d1c0bb4cc1c334d59b0.png" alt="各链路类型对Tag处理"></p><h2 id="允许数据包通过交换机间的链路"><a href="#允许数据包通过交换机间的链路" class="headerlink" title="允许数据包通过交换机间的链路"></a>允许数据包通过交换机间的链路</h2><pre>port trunk allow-pass vlan 10 20</pre> <h2 id="Trunk协议时数据包加tag及去tag标记命令"><a href="#Trunk协议时数据包加tag及去tag标记命令" class="headerlink" title="Trunk协议时数据包加tag及去tag标记命令"></a>Trunk协议时数据包加tag及去tag标记命令</h2><pre>port hybried tagged vlan 10 20 //加tagport hybried tagged vlan 10 20 //去tag</pre>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;HCIA学习笔记-4-5&quot;&gt;&lt;a href=&quot;#HCIA学习笔记-4-5&quot; class=&quot;headerlink&quot; title=&quot;HCIA学习笔记(4/5)&quot;&gt;&lt;/a&gt;HCIA学习笔记(4/5)&lt;/h1&gt;&lt;h1 id=&quot;OSPF-链路状态路由协议：开放式最短路径优先-OSPF-协议&quot;&gt;&lt;a href=&quot;#OSPF-链路状态路由协议：开放式最短路径优先-OSPF-协议&quot; class=&quot;headerlink&quot; title=&quot;OSPF-链路状态路由协议：开放式最短路径优先(OSPF)协议&quot;&gt;&lt;/a&gt;OSPF-链路状态路由协议：开放式最短路径优先(OSPF)协议&lt;/h1&gt;&lt;h2 id=&quot;版本分为&quot;&gt;&lt;a href=&quot;#版本分为&quot; class=&quot;headerlink&quot; title=&quot;版本分为&quot;&gt;&lt;/a&gt;版本分为&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;v2适用于IPv4&lt;/li&gt;
&lt;li&gt;v3适用于IPv6&lt;h2 id=&quot;链路状态信息LSA-Link-State&quot;&gt;&lt;a href=&quot;#链路状态信息LSA-Link-State&quot; class=&quot;headerlink&quot; title=&quot;链路状态信息LSA(Link State)&quot;&gt;&lt;/a&gt;链路状态信息LSA(Link State)&lt;/h2&gt;&lt;/li&gt;
&lt;li&gt;链路类型&lt;/li&gt;
&lt;li&gt;链路开销&lt;/li&gt;
&lt;li&gt;链路接口IP&lt;/li&gt;
&lt;li&gt;链路接口子网掩码&lt;/li&gt;
&lt;li&gt;链路上的路由器&lt;h2 id=&quot;链路状态数据库（LSDB）&quot;&gt;&lt;a href=&quot;#链路状态数据库（LSDB）&quot; class=&quot;headerlink&quot; title=&quot;链路状态数据库（LSDB）&quot;&gt;&lt;/a&gt;链路状态数据库（LSDB）&lt;/h2&gt;&lt;/li&gt;
&lt;li&gt;保存链路状态信息
    
    </summary>
    
    
      <category term="笔记" scheme="https://www.sdyunet.cn/categories/%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="笔记" scheme="https://www.sdyunet.cn/tags/%E7%AC%94%E8%AE%B0/"/>
    
      <category term="网络" scheme="https://www.sdyunet.cn/tags/%E7%BD%91%E7%BB%9C/"/>
    
      <category term="HCIA" scheme="https://www.sdyunet.cn/tags/HCIA/"/>
    
      <category term="华为" scheme="https://www.sdyunet.cn/tags/%E5%8D%8E%E4%B8%BA/"/>
    
      <category term="网工" scheme="https://www.sdyunet.cn/tags/%E7%BD%91%E5%B7%A5/"/>
    
  </entry>
  
  <entry>
    <title>HCIA学习笔记(3/5)</title>
    <link href="https://www.sdyunet.cn/2019/12/30/HCIA%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B03/"/>
    <id>https://www.sdyunet.cn/2019/12/30/HCIA%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B03/</id>
    <published>2019-12-30T09:08:50.000Z</published>
    <updated>2020-03-19T01:42:52.022Z</updated>
    
    <content type="html"><![CDATA[<h1 id="HCIA学习笔记（3-7）"><a href="#HCIA学习笔记（3-7）" class="headerlink" title="HCIA学习笔记（3/7）"></a>HCIA学习笔记（3/7）</h1><p><img src="https://i.jpg.dog/img/ba71c403eda7783dd6263612c26e5b2c.png" alt="ping命令执行过程图示"></p><h1 id="路由器基本原理"><a href="#路由器基本原理" class="headerlink" title="路由器基本原理"></a>路由器基本原理</h1><h2 id="路由器连接不同的LAN，LAN也称广播域进行数据转发。"><a href="#路由器连接不同的LAN，LAN也称广播域进行数据转发。" class="headerlink" title="路由器连接不同的LAN，LAN也称广播域进行数据转发。"></a>路由器连接不同的LAN，LAN也称广播域进行数据转发。</h2><p>##工作原理</p><ul><li>解封装</li><li>查表</li><li>重封装<h2 id="自治系统AS："><a href="#自治系统AS：" class="headerlink" title="自治系统AS："></a>自治系统AS：</h2>由一个管理机构管理、使用统一路由策略的路由器的集合。<h2 id="IP路由表："><a href="#IP路由表：" class="headerlink" title="IP路由表："></a>IP路由表：</h2></li></ul><pre>display IP routing-table</pre><a id="more"></a><h3 id="路由表结构"><a href="#路由表结构" class="headerlink" title="路由表结构"></a>路由表结构</h3><p><img src="https://i.jpg.dog/img/911fd30b253e3efc022400cfafb0db64.png" alt="路由表结构"></p><h3 id="路由优先级pre"><a href="#路由优先级pre" class="headerlink" title="路由优先级pre"></a>路由优先级pre</h3><p><img src="https://i.jpg.dog/img/094c796dab6dc0cb8214061e8ff912f8.png" alt="路由优先级pre"></p><h3 id="路由选路："><a href="#路由选路：" class="headerlink" title="路由选路："></a>路由选路：</h3><ol><li>最长匹配原则：两条相同路由，但子网掩码不同时，选掩码最长的</li><li>路由优先级pre：小优先原则</li><li>路由度量cost：小优先原则</li><li>等价路由随机选择路径</li></ol><h3 id="路由器转发数据："><a href="#路由器转发数据：" class="headerlink" title="路由器转发数据："></a>路由器转发数据：</h3><p>目的网段/掩码+出接口+下一跳</p><h1 id="三层技术：静态路由协议的作用及基本配置、浮动静态路由、缺省路由"><a href="#三层技术：静态路由协议的作用及基本配置、浮动静态路由、缺省路由" class="headerlink" title="三层技术：静态路由协议的作用及基本配置、浮动静态路由、缺省路由"></a>三层技术：静态路由协议的作用及基本配置、浮动静态路由、缺省路由</h1><p><img src="https://i.jpg.dog/img/46aef3877887c95e1a882047c156fc2b.png" alt="学习示例拓扑"></p><h2 id="添加静态路由，命令格式：ip-route-static-目标地址-掩码-出端口-下一跳"><a href="#添加静态路由，命令格式：ip-route-static-目标地址-掩码-出端口-下一跳" class="headerlink" title="添加静态路由，命令格式：ip route-static 目标地址 掩码 出端口 下一跳"></a>添加静态路由，命令格式：<code>ip route-static 目标地址 掩码 出端口 下一跳</code></h2><pre>R1路由器:ip route-static 192.168.2.1 24 gigabitethernet 0/0/1 192.168.2.2R2路由器:ip route-static 192.168.1.1 24 gigabitethernet 0/0/1 192.168.2.1</pre><h2 id="浮动静态路由："><a href="#浮动静态路由：" class="headerlink" title="浮动静态路由："></a>浮动静态路由：</h2><ul><li>两条链路，写入两条静态路由，并更改其中一条路由的优先级，产生容灾性，静态路由备份。</li><li>当优先级高的路由故障时，优先级低的路由浮现出来进行容灾，称为浮动路由。</li></ul><h2 id="路由器的环回路由端口："><a href="#路由器的环回路由端口：" class="headerlink" title="路由器的环回路由端口："></a>路由器的环回路由端口：</h2><ul><li>loopback0/1/2/…….</li></ul><h2 id="缺省路由："><a href="#缺省路由：" class="headerlink" title="缺省路由："></a>缺省路由：</h2><ul><li>一条缺省路由可以代替多条明细路由。</li><li><pre>示例命令：ip route-static 0.0.0.0 0 GigabitEthernet 0/0/0 172.16.1.2</pre></li></ul><h1 id="三层技术：动态路由协议介绍"><a href="#三层技术：动态路由协议介绍" class="headerlink" title="三层技术：动态路由协议介绍"></a>三层技术：动态路由协议介绍</h1><h2 id="动态路由——动态路由协议："><a href="#动态路由——动态路由协议：" class="headerlink" title="动态路由——动态路由协议："></a>动态路由——动态路由协议：</h2><ul><li>RIP:趋于淘汰</li><li>OSPF：范围相对较小，辖区内</li><li>ISIS：范围相对中等，市间</li><li>BGP：范围相对较大,省间</li></ul><h2 id="路由的分类-IGP与EGP、数据链路状态与距离矢量"><a href="#路由的分类-IGP与EGP、数据链路状态与距离矢量" class="headerlink" title="路由的分类:IGP与EGP、数据链路状态与距离矢量"></a>路由的分类:IGP与EGP、数据链路状态与距离矢量</h2><h3 id="部署范围："><a href="#部署范围：" class="headerlink" title="部署范围："></a>部署范围：</h3><ul><li>AS内（IGP内部网关协议）：RIP、OSPF、ISIS</li><li>AS外（EGP外部网关协议）：BGP<h3 id="工作方式："><a href="#工作方式：" class="headerlink" title="工作方式："></a>工作方式：</h3></li><li>距离矢量 RIP BGP</li><li>链路状态 OSPF ISIS</li><li>区别：距离矢量易出现环路<h2 id="RIP-路由信息协议："><a href="#RIP-路由信息协议：" class="headerlink" title="RIP 路由信息协议："></a>RIP 路由信息协议：</h2>是基于距离矢量算法的协议，一般适用于小型网络中。配置简单，易于维护。<h3 id="RIP工作原理："><a href="#RIP工作原理：" class="headerlink" title="RIP工作原理："></a>RIP工作原理：</h3></li><li>路由器运行RIP后，会首先发送路由更新请求，收到请求的路由器会发送自己的RIP路由进行响应。</li><li>网络稳定后，路由器会周期性的发送路由更新信息。<h3 id="RIP-度量-开销（cost）"><a href="#RIP-度量-开销（cost）" class="headerlink" title="RIP-度量-开销（cost）:"></a>RIP-度量-开销（cost）:</h3></li><li>RIP使用跳数作为度量值来衡量到达目的网络的距离；</li><li>缺省情况下，直连网络的路由跳数为0。当路由器发送路由更新时，会把度量值加1 ， RIP规定超过15跳为网络不可达。<h3 id="RIPv1包结构"><a href="#RIPv1包结构" class="headerlink" title="RIPv1包结构"></a>RIPv1包结构</h3><img src="https://i.jpg.dog/img/b40a527abf505d58494f9715cb5a7574.png" alt="RIPv1包结构"><h3 id="RIPv2包结构"><a href="#RIPv2包结构" class="headerlink" title="RIPv2包结构"></a>RIPv2包结构</h3><img src="https://i.jpg.dog/img/5d9b50417827a82bd769505ffac84488.png" alt="RIPv2包结构"><h3 id="RIPv1与v2的区别"><a href="#RIPv1与v2的区别" class="headerlink" title="RIPv1与v2的区别"></a>RIPv1与v2的区别</h3><img src="https://i.jpg.dog/img/0309bb9b799ce0ef163f3a46302130fb.png" alt="RIPv1与v2的区别"><h3 id="RIPv2认证"><a href="#RIPv2认证" class="headerlink" title="RIPv2认证"></a>RIPv2认证</h3><img src="https://i.jpg.dog/img/94312574af005cc3e749812ac1645c74.png" alt="RIPv2认证"><h3 id="相关命令"><a href="#相关命令" class="headerlink" title="相关命令"></a>相关命令</h3><pre>rip <进程号>rip进程中，version指令可以查看当前的RIP版本号，version2或version1切换版本rip进程中，network指令可以声明主类网络，如：192.168.1.0或10.0.0.0或172.1.0.0RIPv2协议中，在端口下时，可以用rip authentication-mode md5 usual huawei来指定MD5认证方式传输路由表</pre><h2 id="RIP环路："><a href="#RIP环路：" class="headerlink" title="RIP环路："></a>RIP环路：</h2>rip两节点的抛出时间不同，网内环境变化，可能会导致环路，但这种环路是暂时的。<h3 id="防环机制："><a href="#防环机制：" class="headerlink" title="防环机制："></a>防环机制：</h3></li><li>水平分割：rip split-horizon</li><li>毒性反转：端口接到路由后，将cost直接置为16后发回，使其失效防环（rip poison-reverse）</li><li>触发更新：网内环境变化时，立即向其他路由发送更新</li><li>最大跳数：16跳时丢弃该条路由</li><li>cost操作：<pre><br>rip metricout 2:更改端口发出路由时的COST为+2<br>rip metricin 2:更改端口接收到路由时的COST为+2<br></pre></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;HCIA学习笔记（3-7）&quot;&gt;&lt;a href=&quot;#HCIA学习笔记（3-7）&quot; class=&quot;headerlink&quot; title=&quot;HCIA学习笔记（3/7）&quot;&gt;&lt;/a&gt;HCIA学习笔记（3/7）&lt;/h1&gt;&lt;p&gt;&lt;img src=&quot;https://i.jpg.dog/img/ba71c403eda7783dd6263612c26e5b2c.png&quot; alt=&quot;ping命令执行过程图示&quot;&gt;&lt;/p&gt;
&lt;h1 id=&quot;路由器基本原理&quot;&gt;&lt;a href=&quot;#路由器基本原理&quot; class=&quot;headerlink&quot; title=&quot;路由器基本原理&quot;&gt;&lt;/a&gt;路由器基本原理&lt;/h1&gt;&lt;h2 id=&quot;路由器连接不同的LAN，LAN也称广播域进行数据转发。&quot;&gt;&lt;a href=&quot;#路由器连接不同的LAN，LAN也称广播域进行数据转发。&quot; class=&quot;headerlink&quot; title=&quot;路由器连接不同的LAN，LAN也称广播域进行数据转发。&quot;&gt;&lt;/a&gt;路由器连接不同的LAN，LAN也称广播域进行数据转发。&lt;/h2&gt;&lt;p&gt;##工作原理&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;解封装&lt;/li&gt;
&lt;li&gt;查表&lt;/li&gt;
&lt;li&gt;重封装&lt;h2 id=&quot;自治系统AS：&quot;&gt;&lt;a href=&quot;#自治系统AS：&quot; class=&quot;headerlink&quot; title=&quot;自治系统AS：&quot;&gt;&lt;/a&gt;自治系统AS：&lt;/h2&gt;由一个管理机构管理、使用统一路由策略的路由器的集合。&lt;h2 id=&quot;IP路由表：&quot;&gt;&lt;a href=&quot;#IP路由表：&quot; class=&quot;headerlink&quot; title=&quot;IP路由表：&quot;&gt;&lt;/a&gt;IP路由表：&lt;/h2&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;display IP routing-table&lt;/pre&gt;
    
    </summary>
    
    
      <category term="笔记" scheme="https://www.sdyunet.cn/categories/%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="笔记" scheme="https://www.sdyunet.cn/tags/%E7%AC%94%E8%AE%B0/"/>
    
      <category term="网络" scheme="https://www.sdyunet.cn/tags/%E7%BD%91%E7%BB%9C/"/>
    
      <category term="HCIA" scheme="https://www.sdyunet.cn/tags/HCIA/"/>
    
      <category term="华为" scheme="https://www.sdyunet.cn/tags/%E5%8D%8E%E4%B8%BA/"/>
    
      <category term="网工" scheme="https://www.sdyunet.cn/tags/%E7%BD%91%E5%B7%A5/"/>
    
  </entry>
  
  <entry>
    <title>HCIA学习笔记(2/5)</title>
    <link href="https://www.sdyunet.cn/2019/12/30/HCIA%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B02/"/>
    <id>https://www.sdyunet.cn/2019/12/30/HCIA%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B02/</id>
    <published>2019-12-30T03:35:03.000Z</published>
    <updated>2020-03-19T01:42:58.229Z</updated>
    
    <content type="html"><![CDATA[<h1 id="HCIA学习笔记（2-7）"><a href="#HCIA学习笔记（2-7）" class="headerlink" title="HCIA学习笔记（2/7）"></a>HCIA学习笔记（2/7）</h1><h2 id="IP编址"><a href="#IP编址" class="headerlink" title="IP编址"></a>IP编址</h2><h3 id="网络层提供了IP路由功能。"><a href="#网络层提供了IP路由功能。" class="headerlink" title="网络层提供了IP路由功能。"></a>网络层提供了IP路由功能。</h3><ul><li>IP报文结构</li><li>公有IP，私有IP，特殊IP范围</li><li>掌握VLSM技术</li><li>理解网关的作用  <a id="more"></a><h3 id="上层协议类型"><a href="#上层协议类型" class="headerlink" title="上层协议类型"></a>上层协议类型</h3><img src="https://i.jpg.dog/img/2d04c7120555a6c4724aca9488f45325.png" alt="上层协议类型"></li></ul><h3 id="IP地址头最大不超过60字节，一般固定产长度20字节"><a href="#IP地址头最大不超过60字节，一般固定产长度20字节" class="headerlink" title="IP地址头最大不超过60字节，一般固定产长度20字节"></a>IP地址头最大不超过60字节，一般固定产长度20字节</h3><p><img src="https://i.jpg.dog/img/74b7036b03bda780763484ab273e8f41.png" alt="74b7036b03bda780763484ab273e8f41.png"></p><h3 id="网关是用来转发来自不同网段之间的数据包。"><a href="#网关是用来转发来自不同网段之间的数据包。" class="headerlink" title="网关是用来转发来自不同网段之间的数据包。"></a>网关是用来转发来自不同网段之间的数据包。</h3><h2 id="IP地址的分段"><a href="#IP地址的分段" class="headerlink" title="IP地址的分段:"></a>IP地址的分段:</h2><p><img src="https://i.jpg.dog/img/91f90c7756ba5a973a0cff1684fafc73.png" alt="91f90c7756ba5a973a0cff1684fafc73.png"></p><h3 id="广播地址：广播地址为255-255-255-255，仅主机位为255时为定向广播地址。路由器隔离广播域，但可用定向广播方式广播。"><a href="#广播地址：广播地址为255-255-255-255，仅主机位为255时为定向广播地址。路由器隔离广播域，但可用定向广播方式广播。" class="headerlink" title="广播地址：广播地址为255.255.255.255，仅主机位为255时为定向广播地址。路由器隔离广播域，但可用定向广播方式广播。"></a>广播地址：广播地址为255.255.255.255，仅主机位为255时为定向广播地址。路由器隔离广播域，但可用定向广播方式广播。</h3><h3 id="VLSM（可变长子网掩码）："><a href="#VLSM（可变长子网掩码）：" class="headerlink" title="VLSM（可变长子网掩码）："></a>VLSM（可变长子网掩码）：</h3><p>为了有效的使用无类别域间路由（CIDR）和路由汇聚(route summary)来控制路由表的大小</p><h2 id="Ethernet-Ⅱ-帧格式："><a href="#Ethernet-Ⅱ-帧格式：" class="headerlink" title="Ethernet Ⅱ 帧格式："></a>Ethernet Ⅱ 帧格式：</h2><p><img src="https://i.jpg.dog/img/ffdabbdaad5ba9c532550fd33d912de9.png" alt="ffdabbdaad5ba9c532550fd33d912de9.png"></p><h3 id="数据帧传输："><a href="#数据帧传输：" class="headerlink" title="数据帧传输："></a>数据帧传输：</h3><p>数据链路层之间通信是基于MAC地址(16进制)的<br><img src="https://i.jpg.dog/img/bb4d32ec290574688cb98506eebbe1a2.png" alt="bb4d32ec290574688cb98506eebbe1a2.png"></p><h2 id="ping指令及arp协议ICMP协议："><a href="#ping指令及arp协议ICMP协议：" class="headerlink" title="ping指令及arp协议ICMP协议："></a>ping指令及arp协议ICMP协议：</h2><blockquote><p>ping指令通过ICMP协议发送和接收数据包，必须要有目标的MAC地址，默认源主机的arp缓存表内无目标主机的MAC地址，通过arp协议广播寻找IP地址对应的主机的MAC地址，目标主机接收到请求后保存源主机的MAC地址，并通过arp协议单播回复源主机自己的MAC地址，源主机接收到目的主机的MAC地址后，将目的主机的MAC地址保存到自己的arp缓存表中，并构造ICMP协议数据包，发送至目标主机，目标主机接收到ICMP包后，通过ICMP协议及ARP缓存表中的源主机的MAC地址，构造ICMP响应数据包，并发送给源主机，源主机解包后给予用户反馈，并循环5次测试(默认，可修改次数)。</p></blockquote><h3 id="交换机的工作原理："><a href="#交换机的工作原理：" class="headerlink" title="交换机的工作原理："></a>交换机的工作原理：</h3><ul><li>学习：建立MAC地址表（学习ARP中的源MAC地址与交换机端口的映射）</li><li>转发：交换机的一个端口接收到数据帧，向另一端口发送出去</li><li>泛洪：交换机的一个端口接收到数据帧，向其他所有端口发送出去（也称广播）<h3 id="交换机MAC地址表的学习方式构建过程："><a href="#交换机MAC地址表的学习方式构建过程：" class="headerlink" title="交换机MAC地址表的学习方式构建过程："></a>交换机MAC地址表的学习方式构建过程：</h3><blockquote><p>通过主机1向网内广播的arp请求包中的源MAC及端口的对应关系学习后保存，再通过泛洪方式向其他端口发送出去，对应IP的主机2会向主机1做单播ARP包的发送，期间经过交换机时，交换机通过学习方式将主机2的MAC地址及对应的端口保存到MAC地址表，并将数据包根据MAC地址表转发给主机1，主机1根据接收到的ARP相应包建立ARP缓存表。</p></blockquote></li></ul><h3 id="ping命令的执行过程数据分析："><a href="#ping命令的执行过程数据分析：" class="headerlink" title="ping命令的执行过程数据分析："></a>ping命令的执行过程数据分析：</h3><p><img src="https://i.jpg.dog/img/e40add0947bce3c5da4d5ad0dade2e88.png" alt="e40add0947bce3c5da4d5ad0dade2e88.png"> </p><h4 id="ping-192-168-1-5命令构建的ICMP请求包："><a href="#ping-192-168-1-5命令构建的ICMP请求包：" class="headerlink" title="ping 192.168.1.5命令构建的ICMP请求包："></a>ping 192.168.1.5命令构建的ICMP请求包：</h4><ul><li>网络层：源IP:192.168.1.4    目的IP:192.168.1.5 协议号:1（ICMP)  </li><li>数据链路层：源MAC:00-04    目的MAC:未知  type:0x0800(ip)<blockquote><p>从上述得知1.5的MAC地址未知，所以构造1.5的arp请求并进行广播，以此构建关于192.168.1.5的mac地址表</p></blockquote><h4 id="ARP-Request-请求包-广播发"><a href="#ARP-Request-请求包-广播发" class="headerlink" title="ARP Request 请求包 广播发"></a>ARP Request 请求包 广播发</h4></li><li>请求数据：源IP:192.168.1.4 源MAC地址    目的IP:192.168.1.5    目的MAC地址ff-ff（泛洪广播）</li><li>数据链路层：源MAC:00-04    目的MAC:ff-ff(广播)    type:0x0806（arp）<h4 id="ARP-Replay-响应包-单播发"><a href="#ARP-Replay-响应包-单播发" class="headerlink" title="ARP Replay 响应包 单播发"></a>ARP Replay 响应包 单播发</h4></li><li>响应数据：源IP：192.168.1.5 源MAC地址    目的IP：192.168.1.4 目的MAC地址</li><li>数据链路层：源MAC地址:00-05    目的MAC：00-04    type:0x0806（arp）<h4 id="ICMP-请求包构建："><a href="#ICMP-请求包构建：" class="headerlink" title="ICMP 请求包构建："></a>ICMP 请求包构建：</h4></li><li>网络层：源IP：192.168.1.4    目的IP：192.168.1.5 协议号：1（ICMP）</li><li>数据链路层：源MAC:00-04    目的MAC:00-05    type:0x0800(ip)<h4 id="ICMP-响应包构建："><a href="#ICMP-响应包构建：" class="headerlink" title="ICMP 响应包构建："></a>ICMP 响应包构建：</h4></li><li>网络层：源IP:192.168.1.5    目的IP:192.168.1.4 协议号:1（ICMP）</li><li>数据链路层：源MAC:00-05    目的MAC:00-04 type:0x0800(ip)<br>##MAC地址表300秒自动老化清除</li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;HCIA学习笔记（2-7）&quot;&gt;&lt;a href=&quot;#HCIA学习笔记（2-7）&quot; class=&quot;headerlink&quot; title=&quot;HCIA学习笔记（2/7）&quot;&gt;&lt;/a&gt;HCIA学习笔记（2/7）&lt;/h1&gt;&lt;h2 id=&quot;IP编址&quot;&gt;&lt;a href=&quot;#IP编址&quot; class=&quot;headerlink&quot; title=&quot;IP编址&quot;&gt;&lt;/a&gt;IP编址&lt;/h2&gt;&lt;h3 id=&quot;网络层提供了IP路由功能。&quot;&gt;&lt;a href=&quot;#网络层提供了IP路由功能。&quot; class=&quot;headerlink&quot; title=&quot;网络层提供了IP路由功能。&quot;&gt;&lt;/a&gt;网络层提供了IP路由功能。&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;IP报文结构&lt;/li&gt;
&lt;li&gt;公有IP，私有IP，特殊IP范围&lt;/li&gt;
&lt;li&gt;掌握VLSM技术&lt;/li&gt;
&lt;li&gt;理解网关的作用
    
    </summary>
    
    
      <category term="笔记" scheme="https://www.sdyunet.cn/categories/%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="笔记" scheme="https://www.sdyunet.cn/tags/%E7%AC%94%E8%AE%B0/"/>
    
      <category term="网络" scheme="https://www.sdyunet.cn/tags/%E7%BD%91%E7%BB%9C/"/>
    
      <category term="HCIA" scheme="https://www.sdyunet.cn/tags/HCIA/"/>
    
      <category term="华为" scheme="https://www.sdyunet.cn/tags/%E5%8D%8E%E4%B8%BA/"/>
    
      <category term="网工" scheme="https://www.sdyunet.cn/tags/%E7%BD%91%E5%B7%A5/"/>
    
  </entry>
  
  <entry>
    <title>使用hexo及Github搭建静态个人博客</title>
    <link href="https://www.sdyunet.cn/2019/12/27/%E4%BD%BF%E7%94%A8hexo%E5%8F%8AGithub%E6%90%AD%E5%BB%BA%E9%9D%99%E6%80%81%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/"/>
    <id>https://www.sdyunet.cn/2019/12/27/%E4%BD%BF%E7%94%A8hexo%E5%8F%8AGithub%E6%90%AD%E5%BB%BA%E9%9D%99%E6%80%81%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/</id>
    <published>2019-12-27T14:04:36.000Z</published>
    <updated>2020-03-19T01:40:36.270Z</updated>
    
    <content type="html"><![CDATA[<h1 id="使用Github-page-及-Hexo-创建个人博客"><a href="#使用Github-page-及-Hexo-创建个人博客" class="headerlink" title="使用Github page 及 Hexo 创建个人博客"></a>使用Github page 及 Hexo 创建个人博客</h1><h2 id="什么是GitHub-Page"><a href="#什么是GitHub-Page" class="headerlink" title="什么是GitHub Page"></a>什么是GitHub Page</h2><blockquote><p>GitHub Page，一般多用于托管个人的静态网站，所以现在很多人也用来它来搭建私人博客，也算是省去了购买服务器、域名等等一系列复杂的操作。搭建博客网站有各种各样的方法，像懂php的可以用WordPress，懂Java的可以用Jpress等等。如果你想简单和简约，那么我强烈推荐你使用Github Page。在学习以下内容之前，请先准备好GitHub账号，如果没有请自行注册。</p></blockquote><a id="more"></a><h2 id="什么是Hexo"><a href="#什么是Hexo" class="headerlink" title="什么是Hexo"></a>什么是Hexo</h2><blockquote><p>Hexo是一个简单、快速、强大的基于 Github Pages的博客发布工具，支持Markdown格式，有众多优秀插件和主题。</p></blockquote><h2 id="为何使用GitHub-Page搭建博客"><a href="#为何使用GitHub-Page搭建博客" class="headerlink" title="为何使用GitHub Page搭建博客"></a>为何使用GitHub Page搭建博客</h2><h3 id="优点"><a href="#优点" class="headerlink" title="优点"></a>优点</h3><ul><li>GitHub的存储库可以做为免费的服务器存储</li><li>GitHub Page提供免费的用于域名解析的CNAME地址</li><li>GitHub服务器位于国外，可以免去麻烦冗长的备案手续和时间</li><li>Hexo有丰富的主题和插件系统，界面美观功能实用</li><li>全静态页面，博客安全风险相对较低</li></ul><h3 id="缺点"><a href="#缺点" class="headerlink" title="缺点"></a>缺点</h3><ul><li>GitHub服务器位于国外，所以访问速度可能会相对较慢</li><li>全博客为静态页面，更新文章的过程较为复杂</li></ul><h2 id="准备阶段"><a href="#准备阶段" class="headerlink" title="准备阶段"></a>准备阶段</h2><ul><li><a href="https://github.com/" target="_blank" rel="noopener">GitHub</a>账号</li><li><a href="https://git-scm.com/" target="_blank" rel="noopener">Git</a>客户端（git bash）</li><li><a href="http://nodejs.cn/" target="_blank" rel="noopener">npm</a>并<a href="https://jingyan.baidu.com/article/e4511cf38c05092b845eaf9b.html" target="_blank" rel="noopener">配置环境变量</a></li><li><a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>:使用npm进行安装，具体内容见下文</li></ul><h2 id="搭建配置过程"><a href="#搭建配置过程" class="headerlink" title="搭建配置过程"></a>搭建配置过程</h2><h3 id="本地使用git-bash创建sshkey"><a href="#本地使用git-bash创建sshkey" class="headerlink" title="本地使用git bash创建sshkey"></a>本地使用git bash创建sshkey</h3><ul><li><p>在本地任意位置右击鼠标（已安装git bash），选择<code>git bash here</code>,在打开的终端中输入   </p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd ~/.ssh    #检查本机已存在的ssh密钥</span><br></pre></td></tr></table></figure></li><li><p>创建sshkey</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -C "YourEmailAddress"</span><br></pre></td></tr></table></figure></li><li><p>将<code>.ssh\id_rsa.pub</code>文件中的内容复制，粘贴到GitHub账号的<code>Settings&gt;SSH and GPG keys&gt;SSH keys&gt;NEW SSH KEYS</code>,粘贴到key文本框中保存<img src="https://i.jpg.dog/img/a8ae11c5d92c993cbbc46c48aae5b360.png" alt="key值示例"></p></li><li><p>在gitbash中输入如下命令：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> ssh -T git@github.com <span class="comment"># 不用修改</span></span></span><br></pre></td></tr></table></figure><p>若提示<code>Are you sure you want to continue connecting (yes/no)?</code>，则输入yes,会出现如下提示：</p><blockquote><p>Hi [Your Username]! You’ve successfully authenticated, but GitHub does not provide shell access.</p></blockquote></li><li><p>进行github账号信息的配置</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> git config --global user.name <span class="string">"username"</span>// 你的github用户名，非昵称</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> git config --global user.email  <span class="string">"xxx@xx.com"</span>// 填写你的github注册邮箱</span></span><br></pre></td></tr></table></figure></li></ul><h3 id="创建博客存储库，并设置"><a href="#创建博客存储库，并设置" class="headerlink" title="创建博客存储库，并设置"></a>创建博客存储库，并设置</h3><ul><li>在github中创建任意名称存储库（自己有域名的话），若无域名，推荐使用<code>username.github.io</code>格式命名，方便后期进行访问</li><li>在存储库的setting页面的GitHub Page页面进行如下设置,Source项选择<code>master分支</code>，若自己有域名则设置Custom domain项为要解析到的域名，https选项推荐勾选，并点击“SAVE”按钮保存。效果如下图：<img src="https://i.jpg.dog/img/a795d514793b98064049870b81461429.png" alt="GitHubpage设置"></li><li>在域名提供商的域名解析处，将GitHubPage提供的cname域名解析到刚才输入的域名，如下图:<img src="https://i.jpg.dog/img/376958d20da98a43eedd253dd8215851.png" alt="376958d20da98a43eedd253dd8215851.png"></li></ul><h3 id="使用npm安装Hexo"><a href="#使用npm安装Hexo" class="headerlink" title="使用npm安装Hexo"></a>使用npm安装Hexo</h3><ul><li>在git bash 中使用如下命令安装Hexo<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> npm install -g hexo</span></span><br></pre></td></tr></table></figure></li><li>如果报错提示command not found ,则在npm的安装目录中搜索hexo所在，并添加环境变量</li><li>有时git bash在打开后会无法使用新添加的环境变量，重新打开git bash即可</li></ul><h3 id="初始化Hexo"><a href="#初始化Hexo" class="headerlink" title="初始化Hexo"></a>初始化Hexo</h3><ul><li>在任意位置建立任意名称文件夹，作为Hexo的工作目录</li><li>打开该目录（该目录必须为空），执行如下命令进行初始化<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> hexo init</span></span><br></pre></td></tr></table></figure></li><li>初始化过程中，git bash会自动从GitHub下载hexo项目并部署</li></ul><h3 id="对内容进行修改"><a href="#对内容进行修改" class="headerlink" title="对内容进行修改"></a>对内容进行修改</h3><ul><li>更改工作目录中的_config.yml文件，修改前请做好备份</li><li>根据自己的具体信息配置文件中的内容，具体配置文件有注释</li><li>配置Deployment信息,方便可以直接通过Hexo命令进行代码的提交<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line">    type:'git'</span><br><span class="line">    repository: git@github.com:username/username.github.io.git</span><br><span class="line">    branch: master</span><br></pre></td></tr></table></figure><h3 id="关于主题"><a href="#关于主题" class="headerlink" title="关于主题"></a>关于主题</h3></li><li>Hexo官方提供了在线<a href="https://hexo.io/themes/" target="_blank" rel="noopener">主题商店</a>，可以直接访问下载。以<a href="https://shen-yu.gitee.io/" target="_blank" rel="noopener">hexo-theme-ayer</a>主题为例,github地址<a href="https://github.com/Shen-Yu/hexo-theme-ayer" target="_blank" rel="noopener">https://github.com/Shen-Yu/hexo-theme-ayer</a>,执行如下命令：<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone https://github.com/Shen-Yu/hexo-theme-ayer theme/ayer</span><br></pre></td></tr></table></figure></li><li>修改_config.yml中的theme的值为主题文件夹的名称</li><li>注意修改主题文件夹下的_config.yml值（根据README.md中的指引修改）</li></ul><h2 id="使用指南-操作命令"><a href="#使用指南-操作命令" class="headerlink" title="使用指南_操作命令"></a>使用指南_操作命令</h2><h3 id="Hexo常用命令"><a href="#Hexo常用命令" class="headerlink" title="Hexo常用命令"></a>Hexo常用命令</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">hexo new "postName" # 新建文章，且自动添加初始化文件头</span><br><span class="line">hexo new page "pageName"    # 新建页面</span><br><span class="line">hexo generate   # 生成静态页面至public目录</span><br><span class="line">hexo server #开启预览访问端口（默认端口4000，可通过-p 临时重定义'ctrl + c'关闭server，端口间应用数据互相独立）</span><br><span class="line">hexo deploy #部署到GitHub</span><br><span class="line">hexo help   # 查看帮助</span><br><span class="line">hexo version    #查看Hexo的版本</span><br></pre></td></tr></table></figure><h3 id="常用命令简写"><a href="#常用命令简写" class="headerlink" title="常用命令简写"></a>常用命令简写</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo g == hexo generate</span><br><span class="line">hexo s == hexo server</span><br><span class="line">hexo d == hexo deploy</span><br></pre></td></tr></table></figure><h3 id="常用组合命令"><a href="#常用组合命令" class="headerlink" title="常用组合命令"></a>常用组合命令</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo s -g   #生成并本地预览</span><br><span class="line">hexo d -g   #生成并上传</span><br></pre></td></tr></table></figure><h2 id="使用指南-文章格式"><a href="#使用指南-文章格式" class="headerlink" title="使用指南_文章格式"></a>使用指南_文章格式</h2><ul><li>文章可以直接使用hexo new “postName”生成到source/_post/文件夹下</li><li>生成的文件会自带简述格式，也可自行建立文件进行编辑，简述格式如下<figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: postName #文章页面上的显示名称</span><br><span class="line">date: 2013-12-02 15:30:16 #文章生成时间，可以任意修改</span><br><span class="line">categories: 默认分类 #分类</span><br><span class="line">tags: [tag1,tag2,tag3] #文章标签，可空，多标签请用格式，注意:后面有个空格</span><br><span class="line">description: 附加一段文章摘要，字数最好在140字以内，会出现在meta的description里面</span><br><span class="line">---</span><br><span class="line"></span><br><span class="line">以下是正文</span><br></pre></td></tr></table></figure></li><li>文章列表指定缩略截止（<code>&lt;!--more--&gt;</code>）<figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="section"># 使用Github page 及 Hexo 创建个人博客</span></span><br><span class="line"><span class="section">## 什么是GitHub Page</span></span><br><span class="line"><span class="quote">&gt; GitHub Page，一般多用于托管个人的静态网站，所以现在很多人也用来它来搭建私人博客，也算是省去了购买服务器、域名等等一系列复杂的操作。搭建博客网站有各种各样的方法，像懂php的可以用WordPress，懂Java的可以用Jpress等等。如果你想简单和简约，那么我强烈推荐你使用Github Page。在学习以下内容之前，请先准备好GitHub账号，如果没有请自行注册。</span></span><br><span class="line"><span class="xml"><span class="comment">&lt;!--more--&gt;</span></span></span><br><span class="line"><span class="section">## 什么是Hexo</span></span><br><span class="line"><span class="quote">&gt; Hexo是一个简单、快速、强大的基于 Github Pages的博客发布工具，支持Markdown格式，有众多优秀插件和主题。</span></span><br><span class="line"></span><br><span class="line"><span class="section">## 为何使用GitHub Page搭建博客</span></span><br></pre></td></tr></table></figure></li><li>最终效果：<br><img src="https://i.jpg.dog/img/ab87b45249cfd20d5a9c225f0fc28717.png" alt="ab87b45249cfd20d5a9c225f0fc28717.png"></li></ul><h2 id="本博客最终效果预览"><a href="#本博客最终效果预览" class="headerlink" title="本博客最终效果预览"></a>本博客最终效果预览</h2><p><img src="https://i.jpg.dog/img/aa005f434285514ddc7bedb79fd51dc4.png" alt="aa005f434285514ddc7bedb79fd51dc4.png"></p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;使用Github-page-及-Hexo-创建个人博客&quot;&gt;&lt;a href=&quot;#使用Github-page-及-Hexo-创建个人博客&quot; class=&quot;headerlink&quot; title=&quot;使用Github page 及 Hexo 创建个人博客&quot;&gt;&lt;/a&gt;使用Github page 及 Hexo 创建个人博客&lt;/h1&gt;&lt;h2 id=&quot;什么是GitHub-Page&quot;&gt;&lt;a href=&quot;#什么是GitHub-Page&quot; class=&quot;headerlink&quot; title=&quot;什么是GitHub Page&quot;&gt;&lt;/a&gt;什么是GitHub Page&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;GitHub Page，一般多用于托管个人的静态网站，所以现在很多人也用来它来搭建私人博客，也算是省去了购买服务器、域名等等一系列复杂的操作。搭建博客网站有各种各样的方法，像懂php的可以用WordPress，懂Java的可以用Jpress等等。如果你想简单和简约，那么我强烈推荐你使用Github Page。在学习以下内容之前，请先准备好GitHub账号，如果没有请自行注册。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="笔记" scheme="https://www.sdyunet.cn/categories/%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="笔记" scheme="https://www.sdyunet.cn/tags/%E7%AC%94%E8%AE%B0/"/>
    
      <category term="博客" scheme="https://www.sdyunet.cn/tags/%E5%8D%9A%E5%AE%A2/"/>
    
      <category term="GitHubPage" scheme="https://www.sdyunet.cn/tags/GitHubPage/"/>
    
      <category term="Hexo" scheme="https://www.sdyunet.cn/tags/Hexo/"/>
    
  </entry>
  
  <entry>
    <title>2019年济南第一场雪</title>
    <link href="https://www.sdyunet.cn/2019/12/27/2019%E5%B9%B4%E6%B5%8E%E5%8D%97%E7%AC%AC%E4%B8%80%E5%9C%BA%E9%9B%AA/"/>
    <id>https://www.sdyunet.cn/2019/12/27/2019%E5%B9%B4%E6%B5%8E%E5%8D%97%E7%AC%AC%E4%B8%80%E5%9C%BA%E9%9B%AA/</id>
    <published>2019-12-27T10:36:31.000Z</published>
    <updated>2020-03-19T01:50:27.694Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://i.jpg.dog/img/356643d1b28a72f32a46477b36781030.jpg" alt="拍摄于2019年12月25日、济南"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;img src=&quot;https://i.jpg.dog/img/356643d1b28a72f32a46477b36781030.jpg&quot; alt=&quot;拍摄于2019年12月25日、济南&quot;&gt;&lt;/p&gt;

      
    
    </summary>
    
    
      <category term="旅行" scheme="https://www.sdyunet.cn/categories/%E6%97%85%E8%A1%8C/"/>
    
    
      <category term="摄影" scheme="https://www.sdyunet.cn/tags/%E6%91%84%E5%BD%B1/"/>
    
      <category term="旅行" scheme="https://www.sdyunet.cn/tags/%E6%97%85%E8%A1%8C/"/>
    
      <category term="纪念" scheme="https://www.sdyunet.cn/tags/%E7%BA%AA%E5%BF%B5/"/>
    
  </entry>
  
  <entry>
    <title>HCIA学习笔记（1/5）</title>
    <link href="https://www.sdyunet.cn/2019/12/23/HCIA%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B01/"/>
    <id>https://www.sdyunet.cn/2019/12/23/HCIA%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B01/</id>
    <published>2019-12-23T09:31:36.000Z</published>
    <updated>2020-03-19T01:43:05.903Z</updated>
    
    <content type="html"><![CDATA[<h1 id="OSI开放式互联参考模型："><a href="#OSI开放式互联参考模型：" class="headerlink" title="OSI开放式互联参考模型："></a>OSI开放式互联参考模型：</h1><p><img src="https://i.jpg.dog/img/2ece8f17c1c9d07ff007629a6d3e7674.png" alt="2ece8f17c1c9d07ff007629a6d3e7674.png"></p><a id="more"></a><h1 id="TCP-IP参考模型与OSI对应："><a href="#TCP-IP参考模型与OSI对应：" class="headerlink" title="TCP/IP参考模型与OSI对应："></a>TCP/IP参考模型与OSI对应：</h1><p><img src="https://i.jpg.dog/img/a145a790f2640c3152c6b53104e8b726.png" alt="a145a790f2640c3152c6b53104e8b726.png"></p><h1 id="分析："><a href="#分析：" class="headerlink" title="分析："></a>分析：</h1><p><a href="https://jpg.dog/i/O7GKW" target="_blank" rel="noopener"><img src="https://i.jpg.dog/img/5cf5c6f8c71465dccc946ae21aa2b4cf.png" alt="5cf5c6f8c71465dccc946ae21aa2b4cf.png"></a></p><h1 id="封装："><a href="#封装：" class="headerlink" title="封装："></a>封装：</h1><p>传输层→网络层→数据层→物理层        的数据加工过程</p><h1 id="解封装"><a href="#解封装" class="headerlink" title="解封装"></a>解封装</h1><h1 id="ISP互联网络提供商"><a href="#ISP互联网络提供商" class="headerlink" title="ISP互联网络提供商"></a>ISP互联网络提供商</h1><h1 id="传输层定义的两种协议："><a href="#传输层定义的两种协议：" class="headerlink" title="传输层定义的两种协议："></a>传输层定义的两种协议：</h1><ul><li>TCP(传输控制协议)：面向连接的传输层协议，提供可靠的传输服务；</li><li>UDP(用户数据包协议)：<h1 id="TCP端口号："><a href="#TCP端口号：" class="headerlink" title="TCP端口号："></a>TCP端口号：</h1><img src="https://i.jpg.dog/img/382f83ab0cb69dea211dc627e7f4bcc0.png" alt="382f83ab0cb69dea211dc627e7f4bcc0.png"><h1 id="TCP头部-16字节-："><a href="#TCP头部-16字节-：" class="headerlink" title="TCP头部(16字节)："></a>TCP头部(16字节)：</h1><a href="https://jpg.dog/i/O7qOK" target="_blank" rel="noopener"><img src="https://i.jpg.dog/img/18b9a30f73683b0d2b6f7a03cd132b76.png" alt="18b9a30f73683b0d2b6f7a03cd132b76.png"></a><br><a href="https://jpg.dog/i/O7VJt" target="_blank" rel="noopener"><img src="https://i.jpg.dog/img/5e76bd78c246d907dbc891650f19992b.png" alt="5e76bd78c246d907dbc891650f19992b.png"></a></li></ul><h1 id="端口号分类："><a href="#端口号分类：" class="headerlink" title="端口号分类："></a>端口号分类：</h1><ul><li>知名端口号：1-1023</li><li>注册端口号：1024-49151</li><li>随机端口号：49152-65535<h1 id="UDP端口号-8字节-："><a href="#UDP端口号-8字节-：" class="headerlink" title="UDP端口号(8字节)："></a>UDP端口号(8字节)：</h1><img src="https://i.jpg.dog/img/668d2656f59ac1dc138fa70012c2fdd6.png" alt="668d2656f59ac1dc138fa70012c2fdd6.png"></li></ul><h1 id="UDP头结构："><a href="#UDP头结构：" class="headerlink" title="UDP头结构："></a>UDP头结构：</h1><p><img src="https://i.jpg.dog/img/1537f6943f35737291485e85ed483e55.png" alt="1537f6943f35737291485e85ed483e55.png"></p><h1 id="TCP传输过程："><a href="#TCP传输过程：" class="headerlink" title="TCP传输过程："></a>TCP传输过程：</h1><h2 id="三次握手"><a href="#三次握手" class="headerlink" title="三次握手"></a>三次握手</h2><ul><li>主机A→服务器A：Send SYN(seq=a,SYN)</li><li>服务器A→主机A：send SYN,ACK(seq=b,ack=a+1,SYN,ACK)</li><li>主机A→服务器A：send ACK(seq=a+1,ack=b+1,ACK)<h2 id="流量控制"><a href="#流量控制" class="headerlink" title="流量控制"></a>流量控制</h2><h2 id="丢包重传"><a href="#丢包重传" class="headerlink" title="丢包重传:"></a>丢包重传:</h2></li><li>丢包时接收方检测到后会重新发送该段的确认号，待确认无误，才会发送下一个段的确认号<h2 id="四次挥手"><a href="#四次挥手" class="headerlink" title="四次挥手"></a>四次挥手</h2><a href="https://jpg.dog/i/O7HfN" target="_blank" rel="noopener"><img src="https://i.jpg.dog/img/c31e1095c6142f3964d0ef0373204d5b.png" alt="c31e1095c6142f3964d0ef0373204d5b.png"></a></li></ul><h1 id="路由器系统视图："><a href="#路由器系统视图：" class="headerlink" title="路由器系统视图："></a>路由器系统视图：</h1><p><a href="https://jpg.dog/i/O7USk" target="_blank" rel="noopener"><img src="https://i.jpg.dog/img/4c50ea8de8362d62d3be5f1046230e38.png" alt="4c50ea8de8362d62d3be5f1046230e38.png"></a></p><h1 id="常用命令："><a href="#常用命令：" class="headerlink" title="常用命令："></a>常用命令：</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">查看所有接口的IP地址及状态：display ip interface brief</span><br><span class="line">查看当前端口的配置：display this</span><br><span class="line">为当前端口配置IP地址：ip address 地址 掩码位数</span><br><span class="line">当前端口初始化：undo</span><br><span class="line">保存配置：save 仅在用户视图下有效</span><br><span class="line">推回上一层：quit&#x2F;q</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;OSI开放式互联参考模型：&quot;&gt;&lt;a href=&quot;#OSI开放式互联参考模型：&quot; class=&quot;headerlink&quot; title=&quot;OSI开放式互联参考模型：&quot;&gt;&lt;/a&gt;OSI开放式互联参考模型：&lt;/h1&gt;&lt;p&gt;&lt;img src=&quot;https://i.jpg.dog/img/2ece8f17c1c9d07ff007629a6d3e7674.png&quot; alt=&quot;2ece8f17c1c9d07ff007629a6d3e7674.png&quot;&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="笔记" scheme="https://www.sdyunet.cn/categories/%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="笔记" scheme="https://www.sdyunet.cn/tags/%E7%AC%94%E8%AE%B0/"/>
    
      <category term="网络" scheme="https://www.sdyunet.cn/tags/%E7%BD%91%E7%BB%9C/"/>
    
  </entry>
  
  <entry>
    <title>Markdown笔记</title>
    <link href="https://www.sdyunet.cn/2019/12/22/Markdown%E5%B8%B8%E7%94%A8%E8%AF%AD%E6%B3%95/"/>
    <id>https://www.sdyunet.cn/2019/12/22/Markdown%E5%B8%B8%E7%94%A8%E8%AF%AD%E6%B3%95/</id>
    <published>2019-12-22T09:31:36.000Z</published>
    <updated>2020-03-19T01:42:02.365Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Markdown笔记"><a href="#Markdown笔记" class="headerlink" title="Markdown笔记"></a>Markdown笔记</h1><h2 id="Markdown简介"><a href="#Markdown简介" class="headerlink" title="Markdown简介"></a>Markdown简介</h2><blockquote><p>Markdown是一种可以使用普通文本编辑器编写的标记语言，通过简单的标记语法，它可以使普通文本内容具有一定的格式。<br>Markdown具有一系列衍生版本，用于扩展Markdown的功能（如表格、脚注、内嵌HTML等等），这些功能原初的Markdown尚不具备，它们能让Markdown转换成更多的格式，例如LaTeX，Docbook。Markdown增强版中比较有名的有Markdown Extra、MultiMarkdown、 Maruku等。这些衍生版本要么基于工具，如Pandoc；要么基于网站，如GitHub和Wikipedia，在语法上基本兼容，但在一些语法和渲染效果上有改动。<a href="引自百度百科">^1</a></p></blockquote><a id="more"></a><h2 id="Markdown常用软件"><a href="#Markdown常用软件" class="headerlink" title="Markdown常用软件"></a>Markdown常用软件</h2><ol><li><strong>在线Markdown编辑器</strong></li></ol><ul><li><a href="https://dillinger.io/" target="_blank" rel="noopener">dillinger</a>漂亮强大，支持md、html、pdf文件导出，支持dropbox、OneDrive、Google drive、GitHub等平台。国外网站，可能不稳定</li><li><a href="http://mahua.jser.me/" target="_blank" rel="noopener">MaHua</a>小众推荐,界面较简洁</li><li><a href="https://jianshu.com" target="_blank" rel="noopener">简书</a>国内博客平台，自动保存，支持图片拖放生成markdown，需注册账号</li><li><a href="https://www.zybuluo.com/mdeditor" target="_blank" rel="noopener">Cmd Markdown</a></li></ul><ol start="2"><li><strong>Chrome插件(谷歌浏览器插件)</strong></li></ol><ul><li><a href="http://marxi.co/" target="_blank" rel="noopener">Marxico</a>中文名<a href="https://maxiang.io/" target="_blank" rel="noopener">马克飞象</a>印象笔记不支持Markdown，而这款可以直接把文本存到印象笔记的编辑器对于重度印象笔记用户是个不错的选择。付费软件，可以免费试用</li></ul><ol start="3"><li><strong>Windows平台编辑器</strong>  </li></ol><ul><li><a href="http://www.markdownpad.com/" target="_blank" rel="noopener">MarkdownPad</a>一款全功能的编辑器，被很多人称赞为Windows平台最好用的markdown编辑器</li><li><a href="https://gitee.com/elerao/Smark" target="_blank" rel="noopener">Smark</a> 开源软件,本文经由此软件编写，保存的时候有闪退的问题</li></ul><ol start="4"><li><strong>OS X平台</strong></li></ol><ul><li><a href="http://25.io/mou/" target="_blank" rel="noopener">Mou</a>老牌的Mac的MD编辑器。</li><li><a href="https://macdown.uranusjr.com/" target="_blank" rel="noopener">MacDown</a>开源免费</li></ul><h2 id="Markdown常用语法"><a href="#Markdown常用语法" class="headerlink" title="Markdown常用语法"></a>Markdown常用语法</h2><table><tr><td>效果</td><td>Markdown语法</td><td>快捷键</td></tr><tr><td>粗体</td><td>`**text**`</td><td>`Ctrl+B`</td></tr><tr><td>斜体</td><td>`*text*`</td><td>`Ctrl+I`</td></tr><tr><td>链接</td><td>`[title](link)`</td><td>`Ctrl+K`</td></tr><tr><td>图片</td><td>`![alt](image link)`</td><td>`Ctrl+Shift+I`</td></tr><tr><td>代码</td><td>\`代码\`</td><td>`Ctrl+Shift+K`</td></tr><tr><td>代码块</td><td>\`\`\`代码块\`\`\` </td><td></td></tr><tr><td>引用</td><td>`> 引用内容 `</td><td>`Ctrl+Q`</td></tr></table><h3 id="标题"><a href="#标题" class="headerlink" title="标题"></a>标题</h3><ul><li>h1: <code>#</code></li><li>h2：<code>##</code></li><li>… …</li><li>h6: <code>######</code></li></ul><h3 id="文本样式"><a href="#文本样式" class="headerlink" title="文本样式"></a>文本样式</h3><ul><li>链接 :<code>[Title](URL)</code></li><li>加粗 :<code>**Bold**</code></li><li>斜体字 :<code>*Italics*</code></li><li>高亮 :<code>==text==</code></li><li>段落 : 段落之间空一行</li><li>换行符 : 一行结束时输入4个空格</li><li>列表 :<code>*</code></li><li>引用 :<code>&gt; 引用内容</code></li><li>内嵌代码 :  ` alert(‘Hello World’);` </li><li>画水平线 (HR) :--------或<code>&lt;hr&gt;(占用整行)</code></li><li>方框：-\ [\ ] -</li></ul><h3 id="插入图片"><a href="#插入图片" class="headerlink" title="插入图片"></a>插入图片</h3><p>在Markdown的编辑器中输入 <code>![图片显示不正常时替换成的文本内容](图床链接/图片链接)</code>    </p><p>有些编辑器支持拖放图片自动生成Markdown内容</p><h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><ul><li>内嵌代码：使用``符号将内嵌的代码添加的到中间，如`code`</li><li>代码块：使用后两组```将代码块包裹,如```code code ```</li></ul><h2 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h2><p>Markdown code: <code>我们记得[百度](https://www.baidu.com)的链接为www.baidu.com</code></p><p>效果：我们记得<a href="https://www.baidu.com" target="_blank" rel="noopener">百度</a>的链接为<a href="http://www.baidu.com" target="_blank" rel="noopener">www.baidu.com</a></p><p>Markdown code: <code>![I Love Markdown](https://ss2.bdstatic.com/70cFvnSh_Q1YnxGkpoWK1HF6hhy/it/u=1613194509,3683268681&amp;fm=26&amp;gp=0.jpg)</code></p><p>效果：<br><img src="https://ss2.bdstatic.com/70cFvnSh_Q1YnxGkpoWK1HF6hhy/it/u=1613194509,3683268681&fm=26&gp=0.jpg" alt="I Love Markdown"></p><p>Markdown code: &gt; 王夫人正过薛姨妈院里坐着，见贾环下了学，命他去抄《金刚经咒》唪诵。那贾环便来到王夫人炕上坐着，命人点了蜡烛，拿腔做势的抄写。一时又叫彩云倒钟茶来，一时又叫玉钏剪蜡花，又说金钏挡了灯亮儿。众丫鬟们素日厌恶他，都不答理。只有彩霞还和他合得来，倒了茶给他，因向他悄悄的道：“你安分些罢，何苦讨人厌。”贾环把眼一瞅道：“我也知道，你别哄我。如今你和宝玉好了，不理我，我也看出来了。”彩霞咬着牙，向他头上戳了一指头，道：“没良心的，‘狗咬吕洞宾——不识好歹。’”</p><p>效果：</p><blockquote><p>王夫人正过薛姨妈院里坐着，见贾环下了学，命他去抄《金刚经咒》唪诵。那贾环便来到王夫人炕上坐着，命人点了蜡烛，拿腔做势的抄写。一时又叫彩云倒钟茶来，一时又叫玉钏剪蜡花，又说金钏挡了灯亮儿。众丫鬟们素日厌恶他，都不答理。只有彩霞还和他合得来，倒了茶给他，因向他悄悄的道：“你安分些罢，何苦讨人厌。”贾环把眼一瞅道：“我也知道，你别哄我。如今你和宝玉好了，不理我，我也看出来了。”彩霞咬着牙，向他头上戳了一指头，道：“没良心的，‘狗咬吕洞宾——不识好歹。’”</p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Markdown笔记&quot;&gt;&lt;a href=&quot;#Markdown笔记&quot; class=&quot;headerlink&quot; title=&quot;Markdown笔记&quot;&gt;&lt;/a&gt;Markdown笔记&lt;/h1&gt;&lt;h2 id=&quot;Markdown简介&quot;&gt;&lt;a href=&quot;#Markdown简介&quot; class=&quot;headerlink&quot; title=&quot;Markdown简介&quot;&gt;&lt;/a&gt;Markdown简介&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;Markdown是一种可以使用普通文本编辑器编写的标记语言，通过简单的标记语法，它可以使普通文本内容具有一定的格式。&lt;br&gt;Markdown具有一系列衍生版本，用于扩展Markdown的功能（如表格、脚注、内嵌HTML等等），这些功能原初的Markdown尚不具备，它们能让Markdown转换成更多的格式，例如LaTeX，Docbook。Markdown增强版中比较有名的有Markdown Extra、MultiMarkdown、 Maruku等。这些衍生版本要么基于工具，如Pandoc；要么基于网站，如GitHub和Wikipedia，在语法上基本兼容，但在一些语法和渲染效果上有改动。&lt;a href=&quot;引自百度百科&quot;&gt;^1&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="笔记" scheme="https://www.sdyunet.cn/categories/%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="笔记" scheme="https://www.sdyunet.cn/tags/%E7%AC%94%E8%AE%B0/"/>
    
      <category term="Markdown" scheme="https://www.sdyunet.cn/tags/Markdown/"/>
    
  </entry>
  
  <entry>
    <title>Git_Frequently_used_commands_Git常用命令</title>
    <link href="https://www.sdyunet.cn/2019/12/21/Git%20Frequently%20used%20commands_Git%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/"/>
    <id>https://www.sdyunet.cn/2019/12/21/Git%20Frequently%20used%20commands_Git%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/</id>
    <published>2019-12-21T11:31:36.000Z</published>
    <updated>2020-03-19T01:52:30.254Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Git-Frequently-used-commands-Git常用命令"><a href="#Git-Frequently-used-commands-Git常用命令" class="headerlink" title="Git_Frequently_used_commands_Git常用命令"></a>Git_Frequently_used_commands_Git常用命令</h1><p><a href="https://jpg.dog/i/O7Xe2" target="_blank" rel="noopener"><img src="https://i.jpg.dog/img/2916b5f9a5bc1845c27a02f3704b74f3.jpg" alt="Git_Frequently_used_commands_Git常用命令"></a></p><h2 id="遇到的问题及解决方案"><a href="#遇到的问题及解决方案" class="headerlink" title="遇到的问题及解决方案"></a>遇到的问题及解决方案</h2><ul><li>在使用git 对源代码进行push到gitHub时可能会出错，出现错误的主要原因是github中的某文件不在本地代码目录中，可以通过如下命令进行代码合并[注：pull=fetch+merge]<code>git pull --rebase origin master</code><br>执行上面代码后可以看到本地代码库中多了README.md文件，此时再执行语句 <code>git push</code> 即可完成代码上传到github</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Git-Frequently-used-commands-Git常用命令&quot;&gt;&lt;a href=&quot;#Git-Frequently-used-commands-Git常用命令&quot; class=&quot;headerlink&quot; title=&quot;Git_Frequently_used_
      
    
    </summary>
    
    
      <category term="笔记" scheme="https://www.sdyunet.cn/categories/%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="笔记" scheme="https://www.sdyunet.cn/tags/%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://www.sdyunet.cn/2019/12/21/hello-world/"/>
    <id>https://www.sdyunet.cn/2019/12/21/hello-world/</id>
    <published>2019-12-21T09:31:36.000Z</published>
    <updated>2020-03-19T01:42:31.965Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><a id="more"></a><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;documentation&lt;/a&gt; for more info. If you get any problems when using Hexo, you can find the answer in &lt;a href=&quot;https://hexo.io/docs/troubleshooting.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;troubleshooting&lt;/a&gt; or you can ask me on &lt;a href=&quot;https://github.com/hexojs/hexo/issues&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;GitHub&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&quot;Quick-Start&quot;&gt;&lt;a href=&quot;#Quick-Start&quot; class=&quot;headerlink&quot; title=&quot;Quick Start&quot;&gt;&lt;/a&gt;Quick Start&lt;/h2&gt;&lt;h3 id=&quot;Create-a-new-post&quot;&gt;&lt;a href=&quot;#Create-a-new-post&quot; class=&quot;headerlink&quot; title=&quot;Create a new post&quot;&gt;&lt;/a&gt;Create a new post&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ hexo new &lt;span class=&quot;string&quot;&gt;&quot;My New Post&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;More info: &lt;a href=&quot;https://hexo.io/docs/writing.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Writing&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="Init" scheme="https://www.sdyunet.cn/categories/Init/"/>
    
    
  </entry>
  
  <entry>
    <title>initpost</title>
    <link href="https://www.sdyunet.cn/2019/12/21/%E9%9A%8F%E7%AC%94/"/>
    <id>https://www.sdyunet.cn/2019/12/21/%E9%9A%8F%E7%AC%94/</id>
    <published>2019-12-21T09:31:36.000Z</published>
    <updated>2020-03-19T01:51:56.104Z</updated>
    
    <content type="html"><![CDATA[<h1 id="随笔写写"><a href="#随笔写写" class="headerlink" title="随笔写写"></a>随笔写写</h1><h2 id="2019年12月27日"><a href="#2019年12月27日" class="headerlink" title="2019年12月27日"></a>2019年12月27日</h2><ul><li>该是复习的时候了，心不静，有事要发生。    </li></ul><h2 id="2019年12月22日"><a href="#2019年12月22日" class="headerlink" title="2019年12月22日"></a>2019年12月22日</h2><ul><li>今天是冬至，中午去北苑吃饺子</li><li>想出去走走</li><li>想回家</li><li>今天是2019年研究生招生考试第二天</li><li>突然感叹以后走了自己那么多账号怎么办,微信和支付宝银行卡里的钱是不是要冲公了</li></ul><h2 id="2019年12月21日"><a href="#2019年12月21日" class="headerlink" title="2019年12月21日"></a>2019年12月21日</h2><ul><li>今天打算去泰安，没去，都忙</li><li>下午去恒大名都吃的把子肉，真香</li><li>又是颓废的一天</li></ul><h2 id="2020年3月19日"><a href="#2020年3月19日" class="headerlink" title="2020年3月19日"></a>2020年3月19日</h2><ul><li>没事干的一天</li><li>疫情影响不知道啥时候结束，想开学（生活费）</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;随笔写写&quot;&gt;&lt;a href=&quot;#随笔写写&quot; class=&quot;headerlink&quot; title=&quot;随笔写写&quot;&gt;&lt;/a&gt;随笔写写&lt;/h1&gt;&lt;h2 id=&quot;2019年12月27日&quot;&gt;&lt;a href=&quot;#2019年12月27日&quot; class=&quot;headerlink&quot; ti
      
    
    </summary>
    
    
      <category term="乱乱写" scheme="https://www.sdyunet.cn/categories/%E4%B9%B1%E4%B9%B1%E5%86%99/"/>
    
    
      <category term="随笔" scheme="https://www.sdyunet.cn/tags/%E9%9A%8F%E7%AC%94/"/>
    
      <category term="日记" scheme="https://www.sdyunet.cn/tags/%E6%97%A5%E8%AE%B0/"/>
    
      <category term="灵感" scheme="https://www.sdyunet.cn/tags/%E7%81%B5%E6%84%9F/"/>
    
  </entry>
  
</feed>
